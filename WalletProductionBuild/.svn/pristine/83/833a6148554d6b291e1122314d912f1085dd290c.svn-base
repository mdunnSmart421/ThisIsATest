<?xml version="1.0" encoding="UTF-8"?>
<wsdl:definitions name="SendMessage"
                  targetNamespace="http://soa.o2.co.uk/sendmessageservice_1"
                  xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/"
                  xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/"
                  xmlns:sms="http://soa.o2.co.uk/sendmessageservice_1"
                  xmlns:smd="http://soa.o2.co.uk/sendmessagedata_1"
                  xmlns:xsd="http://www.w3.org/2001/XMLSchema"
                  >


    <wsdl:types>

    <xsd:schema targetNamespace="http://soa.o2.co.uk/sendmessagedata_1"
                elementFormDefault="qualified"
                attributeFormDefault="unqualified"
                xmlns:xsd="http://www.w3.org/2001/XMLSchema"
                xmlns:smd="http://soa.o2.co.uk/sendmessagedata_1"
            >


        <xsd:complexType name="SOAFaultType">
            <xsd:annotation>
                <xsd:documentation>
                    The type of the response sent to the calling
                    application, if something goes wrong.
                </xsd:documentation>
            </xsd:annotation>
            <xsd:sequence>
                <xsd:element ref="smd:SOAFaultOriginator"/>
                <xsd:element ref="smd:SOAFaultCode"/>
                <xsd:element name="faultDescription" type="xsd:string"
                             minOccurs="0">
                    <xsd:annotation>
                        <xsd:documentation>
                            A human readable description of the error.
                        </xsd:documentation>
                    </xsd:annotation>
                </xsd:element>
                <xsd:element name="faultTrace" type="xsd:string"
                             minOccurs="0">
                    <xsd:annotation>
                        <xsd:documentation>
                            A computer generated dump of the fault (may help
                            in debugging problems).
                        </xsd:documentation>
                    </xsd:annotation>
                </xsd:element>
                <xsd:element ref="smd:SOATransactionID" minOccurs="0"/>
            </xsd:sequence>
        </xsd:complexType>
        <xsd:element name="SOAFault" type="smd:SOAFaultType">
            <xsd:annotation>
                <xsd:documentation>
                    The response sent to the calling application, if
                    something goes wrong.
                </xsd:documentation>
            </xsd:annotation>
        </xsd:element>
        <xsd:element name="SOAFaultCode" type="xsd:string">
            <xsd:annotation>
                <xsd:documentation>
                    A numeric representation of a fault (should be included
                    in errors.xml).
                </xsd:documentation>
            </xsd:annotation>
        </xsd:element>
        <xsd:element name="SOAFaultOriginator" type="xsd:string">
            <xsd:annotation>
                <xsd:documentation>
                    A representation of where a fault originates (should be
                    included in errors.xml).
                </xsd:documentation>
            </xsd:annotation>
        </xsd:element>
        <xsd:element name="SOATransactionID" type="xsd:string">
            <xsd:annotation>
                <xsd:documentation>
                    The transaction ID generated by the ESB.
                </xsd:documentation>
            </xsd:annotation>
        </xsd:element>
        <xsd:element name="SOAConsumerTransactionID" type="xsd:string">
            <xsd:annotation>
                <xsd:documentation>
                    A transaction ID supplied by the calling aplication. It
                    will not be processed but is passed through and logged
                    by all underlying services (aids in debugging problems).
                </xsd:documentation>
            </xsd:annotation>
        </xsd:element>
        <xsd:simpleType name="msisdnType">
            <xsd:annotation>
                <xsd:documentation>
                    Mobile Phone numbers (MSISDNs) should always be defined
                    as strings, including country codes i.e. "447734123456";
                    and translated into localised formats on the
                    presentation and backend layers.
                </xsd:documentation>
            </xsd:annotation>
            <xsd:restriction base="xsd:string"/>
        </xsd:simpleType>
        <xsd:simpleType name="billingAccountNumberType">
            <xsd:annotation>
                <xsd:documentation>
                    A billing account, as it appears in the back end billing
                    system (Companion).
                </xsd:documentation>
            </xsd:annotation>
            <xsd:restriction base="xsd:string">
                <xsd:minLength value="6"/>
                <xsd:maxLength value="20"/>
            </xsd:restriction>
        </xsd:simpleType>
        <xsd:simpleType name="portalIDType">
            <xsd:annotation>
                <xsd:documentation>
                    The portal account username (i.e., Portal ID).
                    A portal account is normally of the form â€œjohn.smith@o2.co.uk".
                    The Portal ID in this example is "john.smith" and the domain is "o2.co.uk".
                </xsd:documentation>
            </xsd:annotation>
            <xsd:restriction base="xsd:string"/>
        </xsd:simpleType>
        <xsd:complexType name="accountType">
            <xsd:annotation>
                <xsd:documentation>
                    Data type to define a customers account. This could be
                    either a portal account, msisdn, or a companion account
                    and msisdn. Or a Bank Account program ID and account ID
                    (initially for Timberlake)
                </xsd:documentation>
            </xsd:annotation>
            <xsd:choice>
                <xsd:element name="portalID" type="smd:portalIDType"/>
                <xsd:element name="msisdn" type="smd:msisdnType">
                    <xsd:annotation>
                        <xsd:documentation>
                            A msisdn, in international format i.e.,"447712345678"
                        </xsd:documentation>
                    </xsd:annotation>
                </xsd:element>
                <xsd:element name="accountDetail"
                             type="smd:accountDetail">
                    <xsd:annotation>
                        <xsd:documentation>
                            Account Details
                        </xsd:documentation>
                    </xsd:annotation>
                </xsd:element>
            </xsd:choice>
        </xsd:complexType>

        <xsd:complexType name="accountDetail">
            <xsd:annotation>
                <xsd:documentation>Account Details</xsd:documentation>
            </xsd:annotation>
            <xsd:sequence>
                <xsd:element name="billingAccountType">
                    <xsd:annotation>
                        <xsd:documentation>
                            The type of account as it is defined in the
                            billing system (only "MOBILE" currently
                            defined).
                        </xsd:documentation>
                    </xsd:annotation>
                    <xsd:simpleType>
                        <xsd:restriction base="xsd:string">
                            <xsd:enumeration value="MOBILE"/>
                        </xsd:restriction>
                    </xsd:simpleType>
                </xsd:element>
                <xsd:element name="accountNumber"
                             type="smd:billingAccountNumberType">
                    <xsd:annotation>
                        <xsd:documentation>
                            The companion account.
                        </xsd:documentation>
                    </xsd:annotation>
                </xsd:element>
                <xsd:element name="msisdn" type="smd:msisdnType">
                    <xsd:annotation>
                        <xsd:documentation>
                            The msisdn within the above account.
                        </xsd:documentation>
                    </xsd:annotation>
                </xsd:element>
            </xsd:sequence>
        </xsd:complexType>

        <xsd:simpleType name="customerIDType">
            <xsd:annotation>
                <xsd:documentation>
                    Main customerID for online services - this is the o2BFid
                    in CPDS at the moment
                </xsd:documentation>
            </xsd:annotation>
            <xsd:restriction base="xsd:string"/>
        </xsd:simpleType>
        <xsd:complexType name="cashCardAccountType">
            <xsd:annotation>
                <xsd:documentation>
                    Uniquely identifies the account in the Prepaid Banking
                    system that is being referred to.
                </xsd:documentation>
            </xsd:annotation>
            <xsd:sequence>
                <xsd:annotation>
                    <xsd:documentation>
                        Financial accounts need a programID and accountID
                        (Ref: Timberlake)
                    </xsd:documentation>
                </xsd:annotation>
                <xsd:element name="programID" type="xsd:long">
                    <xsd:annotation>
                        <xsd:documentation>
                            Identifies program. Translates into "Smart" or
                            "Freedom" with various limits
                        </xsd:documentation>
                    </xsd:annotation>
                </xsd:element>
                <xsd:element name="accountID" type="xsd:long">
                    <xsd:annotation>
                        <xsd:documentation>
                            Unique internal account ID on the TSYS platform.
                            Probably can be applied to other banking systems
                            as well.
                        </xsd:documentation>
                    </xsd:annotation>
                </xsd:element>
                <xsd:element name="userID" type="xsd:long" minOccurs="0"/>
                <xsd:element name="cardID" type="xsd:long" minOccurs="0"/>
            </xsd:sequence>
        </xsd:complexType>
        <xsd:simpleType name="productIDType">
            <xsd:annotation>
                <xsd:documentation>
                    Identifies a product - temporarily the same as o2BFID
                    (and hence customer ID)
                </xsd:documentation>
            </xsd:annotation>
            <xsd:restriction base="xsd:string"/>
        </xsd:simpleType>
        <xsd:simpleType name="customerRoleType">
            <xsd:annotation>
                <xsd:documentation>
                    The role concept from registration DB or A and R
                </xsd:documentation>
            </xsd:annotation>
            <xsd:restriction base="xsd:string">
                <xsd:enumeration value="admin"/>
                <xsd:enumeration value="user"/>
                <xsd:enumeration value="chooser"/>
                <xsd:enumeration value="superuser"/>
                <xsd:enumeration value="unknown"/>
            </xsd:restriction>
        </xsd:simpleType>
        <xsd:simpleType name="imsiType">
            <xsd:annotation>
                <xsd:documentation>IMSI Number</xsd:documentation>
            </xsd:annotation>
            <xsd:restriction base="xsd:string"/>
        </xsd:simpleType>
        <xsd:simpleType name="imeiType">
            <xsd:annotation>
                <xsd:documentation>IMEI Number</xsd:documentation>
            </xsd:annotation>
            <xsd:restriction base="xsd:string"/>
        </xsd:simpleType>
        <xsd:element name="subscriberProfile"
                     type="smd:SubscriberProfileType">
            <xsd:annotation>
                <xsd:documentation>
                    Subscriber Profile Element
                </xsd:documentation>
            </xsd:annotation>
        </xsd:element>
        <xsd:complexType name="SubscriberProfileType">
            <xsd:annotation>
                <xsd:documentation>
                    Complex Type that defines Subscriber Profile
                </xsd:documentation>
            </xsd:annotation>
            <xsd:sequence>
                <xsd:element ref="smd:SubscriberID">
                    <xsd:annotation>
                        <xsd:documentation>
                            This refers to the MSISDN for Mobile subscribers
                        </xsd:documentation>
                    </xsd:annotation>
                </xsd:element>
                <xsd:element ref="smd:Operator" minOccurs="0">
                    <xsd:annotation>
                        <xsd:documentation>
                            Operator ID for the particular subscriber
                        </xsd:documentation>
                    </xsd:annotation>
                </xsd:element>
                <xsd:element ref="smd:PaymentCategory" minOccurs="0">
                    <xsd:annotation>
                        <xsd:documentation>
                            Type of payment, Prepay of Postpay
                        </xsd:documentation>
                    </xsd:annotation>
                </xsd:element>
                <xsd:element ref="smd:Segment" minOccurs="0">
                    <xsd:annotation>
                        <xsd:documentation>
                            Segment of Subscriber, corporate, consumer, ISP
                            etc.
                        </xsd:documentation>
                    </xsd:annotation>
                </xsd:element>
                <xsd:element name="channel" type="xsd:string" minOccurs="0"/>
                <xsd:element name="ServiceProviderID" type="xsd:long"
                             minOccurs="0">
                    <xsd:annotation>
                        <xsd:documentation>
                            SPID which is a unique value for the type of O2
                            Service Provider like Tesco, CPW etc.
                        </xsd:documentation>
                    </xsd:annotation>
                </xsd:element>
                <xsd:element name="Status" type="xsd:string"/>
            </xsd:sequence>
        </xsd:complexType>
        <xsd:element name="Operator" type="xsd:string">
            <xsd:annotation>
                <xsd:documentation>
                    O2 UK, Tesco or Other normally
                </xsd:documentation>
            </xsd:annotation>
        </xsd:element>
        <xsd:element name="Segment" type="smd:SegmentType">
            <xsd:annotation>
                <xsd:documentation>
                    The P and L definition of Consumer/SME/Corp
                </xsd:documentation>
            </xsd:annotation>
        </xsd:element>
        <xsd:simpleType name="SegmentType">
            <xsd:annotation>
                <xsd:documentation>
                    main ones listed - could be others
                </xsd:documentation>
            </xsd:annotation>
            <xsd:restriction base="xsd:string">
                <xsd:enumeration value="Consumer"/>
                <xsd:enumeration value="SME"/>
                <xsd:enumeration value="Corporate"/>
                <xsd:enumeration value="ISP"/>
                <xsd:enumeration value="Unknown"/>
            </xsd:restriction>
        </xsd:simpleType>
        <xsd:element name="Channel" type="xsd:string">
            <xsd:annotation>
                <xsd:documentation>
                    The sales channel that owns the subscriber
                </xsd:documentation>
            </xsd:annotation>
        </xsd:element>
        <xsd:element name="SubscriberID" type="smd:msisdnType">
            <xsd:annotation>
                <xsd:documentation>
                    Subscriber ID that is unique identifier of the
                    subscriber eg: MSISDN no is subscriberID for Mobile
                    users
                </xsd:documentation>
            </xsd:annotation>
        </xsd:element>
        <xsd:element name="PaymentCategory"
                     type="smd:PaymentCategoryType">
            <xsd:annotation>
                <xsd:documentation>
                    Divides between pay and go/pay monthly
                </xsd:documentation>
            </xsd:annotation>
        </xsd:element>
        <xsd:simpleType name="PaymentCategoryType">
            <xsd:annotation>
                <xsd:documentation>
                    two values postpay or prepay
                </xsd:documentation>
            </xsd:annotation>
            <xsd:restriction base="xsd:string">
                <xsd:enumeration value="Prepay"/>
                <xsd:enumeration value="Postpay"/>
                <xsd:enumeration value="Unknown"/>
            </xsd:restriction>
        </xsd:simpleType>
        <xsd:complexType name="ServiceResultType">
            <xsd:annotation>
                <xsd:documentation>
                    This data type represents the status recieved from a
                    service for a task that might be earlier assigned to
                    that service.
                </xsd:documentation>
            </xsd:annotation>
            <xsd:sequence>
                <xsd:element name="statusCode" type="xsd:string">
                    <xsd:annotation>
                        <xsd:documentation>
                            A unique code assigned to the status from the
                            service. A set of status codes can be defined
                            for services based on the context. A stausCode
                            will be suffixed with "S" for success, "F" for
                            failure and "E" for Error and "P" for Pending to
                            describe the type of status recieved from
                            service.
                        </xsd:documentation>
                    </xsd:annotation>
                </xsd:element>
                <xsd:element name="externalDescription" type="xsd:string">
                    <xsd:annotation>
                        <xsd:documentation>
                            A description of status in human-readble form
                            that has to be sent to the end-user.
                        </xsd:documentation>
                    </xsd:annotation>
                </xsd:element>
                <xsd:element name="internalDescription" type="xsd:string"
                             minOccurs="0">
                    <xsd:annotation>
                        <xsd:documentation>
                            This is an optional description of the status
                            which is meant for logging purpose. This may
                            contain the java stack trace or Database error
                            trace based on the context.
                        </xsd:documentation>
                    </xsd:annotation>
                </xsd:element>
            </xsd:sequence>
        </xsd:complexType>
        <xsd:complexType name="MapItem">
            <xsd:annotation>
                <xsd:documentation>
                    An individual Item that carries key-value pair for
                    extensible properties
                </xsd:documentation>
            </xsd:annotation>
            <xsd:sequence>
                <xsd:element name="key" type="xsd:string"/>
                <xsd:choice>
                    <xsd:annotation>
                        <xsd:documentation>
                            Only the relevant elemt is populated based on
                            the type of the parameter.
                        </xsd:documentation>
                    </xsd:annotation>
                    <xsd:element name="intValue" type="xsd:integer"/>
                    <xsd:element name="strValue" type="xsd:string"/>
                    <xsd:element name="boolValue" type="xsd:boolean"/>
                </xsd:choice>
            </xsd:sequence>
        </xsd:complexType>
        <xsd:complexType name="MapType">
            <xsd:annotation>
                <xsd:documentation>
                    A generic extensible complex type that can be used to
                    send multiple name-value pairs
                </xsd:documentation>
            </xsd:annotation>
            <xsd:sequence>
                <xsd:element name="mapItem" type="smd:MapItem"
                             minOccurs="0" maxOccurs="unbounded"/>
            </xsd:sequence>
        </xsd:complexType>
        <xsd:simpleType name="StatusCodeType">
            <xsd:annotation>
                <xsd:documentation>
                    This is borrowed from SPML definition of a status code -
                    the pending status is a bit debatable
                </xsd:documentation>
            </xsd:annotation>
            <xsd:restriction base="xsd:string">
                <xsd:enumeration value="success"/>
                <xsd:enumeration value="failure"/>
                <xsd:enumeration value="error"/>
                <xsd:enumeration value="pending"/>
                <xsd:enumeration value="expired"/>
            </xsd:restriction>
        </xsd:simpleType>
        <xsd:element name="applicationID" type="xsd:string">
            <xsd:annotation>
                <xsd:documentation>
                    applicationID is part of request identifier handled by
                    SOA Access Gateway. Application ID uniquely identifies
                    the name of consuming application. Example - DASHB, IVR,
                    WAP, etc
                </xsd:documentation>
            </xsd:annotation>
        </xsd:element>
        <xsd:element name="providerID" type="xsd:string">
            <xsd:annotation>
                <xsd:documentation>
                    providerID is also part of request identifier handled by
                    SOA Access Gateway. Provider ID identifies the company
                    that provides a functionality to end customers by
                    invoking this specific service. Example - O2, Tesco, Car
                    Phone Warehouse
                </xsd:documentation>
            </xsd:annotation>
        </xsd:element>
        <xsd:element name="originatorIP" type="xsd:string">
            <xsd:annotation>
                <xsd:documentation>
                    This parameter indicates the IP address of the
                    originating system. This parameter will be added by the
                    SOA Access Gateway
                </xsd:documentation>
            </xsd:annotation>
        </xsd:element>
        <xsd:simpleType name="mobileAccessIdType">
            <xsd:annotation>
                <xsd:documentation>
                    Mobile Access Id is Hash id which is same as the UID
                    generated by Wap Gateway
                </xsd:documentation>
            </xsd:annotation>
            <xsd:restriction base="xsd:string"/>
        </xsd:simpleType>
        <xsd:element name="debugFlag" type="xsd:string">
            <xsd:annotation>
                <xsd:documentation>
                    This parameter indicates whether we should log or not,
                    Used for debugging perspective from a Support
                    Perspective.
                </xsd:documentation>
            </xsd:annotation>
        </xsd:element>

        <xsd:simpleType name="cardHolderNameType">
            <xsd:annotation>
                <xsd:documentation>
                    The customer name on the Credit or Debit Card
                </xsd:documentation>
            </xsd:annotation>
            <xsd:restriction base="xsd:string"/>
        </xsd:simpleType>

        <xsd:simpleType name="cardIssueDateType">
            <xsd:annotation>
                <xsd:documentation>
                    The date when the card was issued. In MM/YY format. It
                    is important that the month comes first followed by the
                    year.
                </xsd:documentation>
            </xsd:annotation>
            <xsd:restriction base="xsd:string">
                <xsd:minLength value="1"/>
                <xsd:maxLength value="5"/>
                <xsd:pattern value="\d{2}/\d{2}"/>
            </xsd:restriction>
        </xsd:simpleType>

        <xsd:simpleType name="cardExpiryDateType">
            <xsd:annotation>
                <xsd:documentation>
                    The card expiry date. In MM/YY format. It is important
                    that the month comes first followed by the year.
                </xsd:documentation>
            </xsd:annotation>
            <xsd:restriction base="xsd:string">
                <xsd:minLength value="1"/>
                <xsd:maxLength value="5"/>
                <xsd:pattern value="\d{2}/\d{2}"/>
            </xsd:restriction>
        </xsd:simpleType>

        <xsd:simpleType name="cardNumberType">
            <xsd:annotation>
                <xsd:documentation>
                    The Credit/Debit Card Number(without spaces)
                </xsd:documentation>
            </xsd:annotation>
            <xsd:restriction base="xsd:string">
                <xsd:pattern value="\d{12,20}"/>
            </xsd:restriction>
        </xsd:simpleType>

        <xsd:simpleType name="cardCV2Type">
            <xsd:annotation>
                <xsd:documentation>
                    The verification number printed on the back of the
                    credit/debit card. The CardCV2 usually a 3 or 4 digit
                    code on the back of card.
                </xsd:documentation>
            </xsd:annotation>
            <xsd:restriction base="xsd:string">
                <xsd:minLength value="1"/>
                <xsd:maxLength value="5"/>
            </xsd:restriction>
        </xsd:simpleType>

        <xsd:simpleType name="cardIssueNumberType">
            <xsd:annotation>
                <xsd:documentation>
                    The Credit or Debit Card Issue Number
                </xsd:documentation>
            </xsd:annotation>
            <xsd:restriction base="xsd:string">
                <xsd:minLength value="1"/>
                <xsd:maxLength value="2"/>
            </xsd:restriction>
        </xsd:simpleType>

        <xsd:simpleType name="cardIssuerType">
            <xsd:annotation>
                <xsd:documentation>The Bank Card Issuer</xsd:documentation>
            </xsd:annotation>
            <xsd:restriction base="xsd:string">
                <xsd:enumeration value="MAESTRO"/>
                <xsd:enumeration value="SOLO"/>
                <xsd:enumeration value="VISA"/>
                <xsd:enumeration value="MASTERCARD"/>
                <xsd:enumeration value="DELTA"/>
                <xsd:enumeration value="AMEX"/>
                <xsd:enumeration value="ELECTRON"/>
            </xsd:restriction>
        </xsd:simpleType>

        <xsd:simpleType name="customerTierType">
            <xsd:annotation>
                <xsd:documentation>
                    Customer friendly description for various segmentation
                    keys. Allowed values are Platinum, Gold, Silver, Bronze,
                    Blue, Unknown

                    Segmentation Key Customer Tier value Platinum Platinum
                    Gold Gold Silver Silver Bronze Bronze Select Gold none
                    Blue Sel_Inv Silver Sel_Few Platinum
                </xsd:documentation>
            </xsd:annotation>
            <xsd:restriction base="xsd:string">
                <xsd:enumeration value="Platinum"></xsd:enumeration>
                <xsd:enumeration value="Gold"></xsd:enumeration>
                <xsd:enumeration value="Silver"></xsd:enumeration>
                <xsd:enumeration value="Bronze"></xsd:enumeration>
                <xsd:enumeration value="Blue"></xsd:enumeration>
                <xsd:enumeration value="Unknown"></xsd:enumeration>
            </xsd:restriction>
        </xsd:simpleType>

        <!--<xsd:simpleType name="emailAddressType">-->
            <!--<xsd:annotation>-->
                <!--<xsd:documentation>The email address</xsd:documentation>-->
            <!--</xsd:annotation>-->
            <!--<xsd:restriction base="xsd:string"/>-->
        <!--</xsd:simpleType>-->

        <xsd:simpleType name="postcodeType">
            <xsd:annotation>
                <xsd:documentation>The Postcode</xsd:documentation>
            </xsd:annotation>
            <xsd:restriction base="xsd:string"/>
        </xsd:simpleType>

        <!-- v1.0.3: Adding bank related information  -->
        <xsd:simpleType name="bankAccountNumberType">
            <xsd:annotation>
                <xsd:documentation>
                    The Bank Account number
                </xsd:documentation>
            </xsd:annotation>
            <xsd:restriction base="xsd:string"/>
        </xsd:simpleType>

        <xsd:simpleType name="bankSortCodeType">
            <xsd:annotation>
                <xsd:documentation>
                    The Bank Sort code.(Ex:40-42-08)
                </xsd:documentation>
            </xsd:annotation>
            <xsd:restriction base="xsd:string">
                <xsd:minLength value="8"/>
                <xsd:maxLength value="8"/>
                <xsd:pattern value="\d{2}(-)\d{2}(-)\d{2}"/>
            </xsd:restriction>
        </xsd:simpleType>

        <xsd:simpleType name="bankAccountHolderNameType">
            <xsd:annotation>
                <xsd:documentation>
                    The Bank Account holder name.
                </xsd:documentation>
            </xsd:annotation>
            <xsd:restriction base="xsd:string"/>
        </xsd:simpleType>
        <!-- v1.0.3: Ends -->

        <xsd:simpleType name="spidType">
            <xsd:annotation>
                <xsd:documentation>
                    The service provider identifier.
                </xsd:documentation>
            </xsd:annotation>
            <xsd:restriction base="xsd:string"/>
        </xsd:simpleType>

        <xsd:simpleType name="maskedCardNumberType">
            <xsd:annotation>
                <xsd:documentation>
                    The Credit/Debit Card Number(without spaces).This
                    element is used to represent the masked data. Ex: If the
                    card number value is 5683387298913746 and it needs to be
                    represented as ************3746, then this data type is
                    used.
                </xsd:documentation>
            </xsd:annotation>
            <xsd:restriction base="xsd:string"/>
        </xsd:simpleType>
        <xsd:simpleType name="maskedBankAccountNumberType">
            <xsd:annotation>
                <xsd:documentation>
                    This type should be used to render a masked
                    representation of the bank account number. Ex: If the
                    bank account number value is 5683387298913746 and it
                    needs to be represented as ************3746, then this
                    data type is used.
                </xsd:documentation>
            </xsd:annotation>
            <xsd:restriction base="xsd:string"/>
        </xsd:simpleType>

        <xsd:simpleType name="ssnType">
            <xsd:annotation>
                <xsd:documentation>Sim Serial Number</xsd:documentation>
            </xsd:annotation>
            <xsd:restriction base="xsd:string">
                <xsd:minLength value="1"/>
                <xsd:maxLength value="20"/>
            </xsd:restriction>
        </xsd:simpleType>

        <xsd:simpleType name="userIdType">
            <xsd:annotation>
                <xsd:documentation>
                    Unique customer identifier, an example would be the Id
                    of a CSA who initiated an activity.
                </xsd:documentation>
            </xsd:annotation>
            <xsd:restriction base="xsd:string">
                <xsd:maxLength value="30"/>
                <xsd:minLength value="1"/>
            </xsd:restriction>
        </xsd:simpleType>

        <xsd:simpleType name="ipAddressType">
            <xsd:annotation>
                <xsd:documentation>
                    This can be an IPv4 address in dotted decimal format,
                    (i.e. DDD.DDD.DDD.DDD, where D represents a digit). OR
                    It can be an IPv6 address in hexadecimal format,
                    (i.e. xxxx:xxxx:xxxx:xxxx:xxxx:xxxx:xxxx:xxxx, where x represents a hex value).
                </xsd:documentation>
            </xsd:annotation>
            <xsd:restriction base="xsd:string"/>
        </xsd:simpleType>

        <xsd:simpleType name="landlineNumberType">
            <xsd:annotation>
                <xsd:documentation>
                    Landline number should always be defined as string, including
                    country codes i.e. "442088702821"; and translated into
                    localised format on the presentation and backend layers.
                </xsd:documentation>
            </xsd:annotation>
            <xsd:restriction base="xsd:string"/>
        </xsd:simpleType>

        <xsd:simpleType name="genderType">
            <xsd:annotation>
                <xsd:documentation>Gender type</xsd:documentation>
            </xsd:annotation>
            <xsd:restriction base="xsd:string">
                <xsd:enumeration value="M"/>
                <xsd:enumeration value="F"/>
                <xsd:enumeration value="U"/>
            </xsd:restriction>
        </xsd:simpleType>

        <xsd:simpleType name="identityUIDType">
            <xsd:annotation>
                <xsd:documentation>
                    The A&amp;R Unique ID. The UID remains static accross userName changes.
                    It is deleted if the Identity becomes merged into another Identity.
                    (A broadcast message will inform systems of this change.)
                </xsd:documentation>
            </xsd:annotation>
            <xsd:restriction base="xsd:string">
                <xsd:pattern value="[0-9A-Za-z]*"/>
                <xsd:maxLength value="40"/>
            </xsd:restriction>
        </xsd:simpleType>

        <xsd:simpleType name="identityUsernameType">
            <xsd:annotation>
                <xsd:documentation>The full A&amp;R username (eg., user@domain or user@o2.co.uk)</xsd:documentation>
            </xsd:annotation>
            <xsd:restriction base="smd:emailAddressType">
                <xsd:maxLength value="320"/>
            </xsd:restriction>
        </xsd:simpleType>


        <xsd:element name="sendSMS" type="smd:sendSMS">
            <xsd:annotation>
                <xsd:documentation>Input message type for sendSMS operation.</xsd:documentation>
            </xsd:annotation>
        </xsd:element>
        <xsd:element name="sendSMSResponse" type="smd:sendSMSResponse">
            <xsd:annotation>
                <xsd:documentation>Response type from sendSMS operation.</xsd:documentation>
            </xsd:annotation>
        </xsd:element>
        <xsd:element name="sendSMSFault" type="smd:SOAFaultType">
            <xsd:annotation>
                <xsd:documentation>Fault response type from sendSMS operation</xsd:documentation>
            </xsd:annotation>
        </xsd:element>
        <xsd:element name="sendMMS" type="smd:sendMMS">
            <xsd:annotation>
                <xsd:documentation>Input message type to sendMMS operation</xsd:documentation>
            </xsd:annotation>
        </xsd:element>
        <xsd:element name="sendMMSResponse" type="smd:sendMMSResponse">
            <xsd:annotation>
                <xsd:documentation>Response from sendMMS operation.</xsd:documentation>
            </xsd:annotation>
        </xsd:element>
        <xsd:element name="sendMMSFault" type="smd:SOAFaultType">
            <xsd:annotation>
                <xsd:documentation>Fault response from sendMMS operation.</xsd:documentation>
            </xsd:annotation>
        </xsd:element>
        <xsd:element name="sendEmail" type="smd:sendEmail">
            <xsd:annotation>
                <xsd:documentation>Input parameter to send email.</xsd:documentation>
            </xsd:annotation>
        </xsd:element>
        <xsd:element name="sendEmailResponse" type="smd:sendEmailResponse">
            <xsd:annotation>
                <xsd:documentation>Response type from sendEmail operation</xsd:documentation>
            </xsd:annotation>
        </xsd:element>
        <xsd:element name="sendEmailFault" type="smd:SOAFaultType">
            <xsd:annotation>
                <xsd:documentation>Fault message as response</xsd:documentation>
            </xsd:annotation>
        </xsd:element>
        <xsd:element name="queryReceiptStatus" type="smd:queryReceiptStatus">
            <xsd:annotation>
                <xsd:documentation>Query receipt status</xsd:documentation>
            </xsd:annotation>
        </xsd:element>
        <xsd:element name="queryReceiptStatusResponse" type="smd:queryReceiptStatusResponse">
            <xsd:annotation>
                <xsd:documentation>Query receipt status response</xsd:documentation>
            </xsd:annotation>
        </xsd:element>
        <xsd:element name="queryReceiptStatusFault" type="smd:SOAFaultType">
            <xsd:annotation>
                <xsd:documentation>Query receipt status Fault</xsd:documentation>
            </xsd:annotation>
        </xsd:element>
        <xsd:element name="sendDynamicSMS" type="smd:sendDynamicSMS">
            <xsd:annotation>
                <xsd:documentation>Send dynamic SMS</xsd:documentation>
            </xsd:annotation>
        </xsd:element>
        <xsd:element name="sendDynamicSMSResponse" type="smd:sendDynamicSMSResponse">
            <xsd:annotation>
                <xsd:documentation>Send dynamic SMS response</xsd:documentation>
            </xsd:annotation>
        </xsd:element>
        <xsd:element name="sendDynamicSMSFault" type="smd:SOAFaultType">
            <xsd:annotation>
                <xsd:documentation>Send dynamic SMS Fault</xsd:documentation>
            </xsd:annotation>
        </xsd:element>
        <xsd:element name="sendMultiSMS" type="smd:sendMultiSMS">
            <xsd:annotation>
                <xsd:documentation>Send multi SMS</xsd:documentation>
            </xsd:annotation>
        </xsd:element>
        <xsd:element name="sendMultiSMSResponse" type="smd:sendMultiSMSResponse">
            <xsd:annotation>
                <xsd:documentation>Send MultiSMS response type</xsd:documentation>
            </xsd:annotation>
        </xsd:element>
        <xsd:element name="sendMultiSMSFault" type="smd:SOAFaultType">
            <xsd:annotation>
                <xsd:documentation>Send multi SMS Fault</xsd:documentation>
            </xsd:annotation>
        </xsd:element>
        <xsd:complexType name="sendSMS">
            <xsd:annotation>
                <xsd:documentation>Send SMS</xsd:documentation>
            </xsd:annotation>
            <xsd:sequence>
                <xsd:element name="mtProfile" type="xsd:string"/>
                <xsd:element name="msisdnList" type="smd:msisdnList"/>
                <xsd:element name="receiptURL" type="xsd:string" minOccurs="0"/>
                <xsd:element name="message" type="xsd:string"/>
                <xsd:element name="messageType" type="smd:messageType"/>
                <xsd:element name="ttl" type="xsd:int"/>
                <xsd:element name="applicationReference" type="xsd:string" minOccurs="0"/>
                <xsd:element name="subMerchantId" type="xsd:string" minOccurs="0"/>
            </xsd:sequence>
        </xsd:complexType>
        <xsd:complexType name="sendSMSResponse">
            <xsd:annotation>
                <xsd:documentation>Send SMS response</xsd:documentation>
            </xsd:annotation>
            <xsd:sequence>
                <xsd:element name="result" type="smd:resultType"/>
            </xsd:sequence>
        </xsd:complexType>
        <xsd:complexType name="resultType">
            <xsd:annotation>
                <xsd:documentation>Response Result type</xsd:documentation>
            </xsd:annotation>
            <xsd:sequence>
                <xsd:element name="statusCode" type="xsd:string"/>
                <xsd:element name="statusDescription" type="xsd:string"/>
                <xsd:element name="transactionId" type="xsd:string"/>
                <xsd:element name="applicationReference" type="xsd:string" minOccurs="0"/>
                <xsd:element name="messageReceipt" type="smd:messageReceipt" minOccurs="0"/>
            </xsd:sequence>
        </xsd:complexType>
        <xsd:complexType name="msisdnStatus">
            <xsd:annotation>
                <xsd:documentation>This indicates if the message reached a particular MSISDN</xsd:documentation>
            </xsd:annotation>
            <xsd:sequence>
                <xsd:element name="msisdn" type="smd:msisdnType"/>
                <xsd:element name="status" type="xsd:string"/>
            </xsd:sequence>
        </xsd:complexType>
        <xsd:complexType name="messageReceipt">
            <xsd:annotation>
                <xsd:documentation>Indicates the message receipt for all the msisdns mentioned in the request
                </xsd:documentation>
            </xsd:annotation>
            <xsd:sequence>
                <xsd:element name="msisdnStatus" type="smd:msisdnStatus" maxOccurs="100"/>
            </xsd:sequence>
        </xsd:complexType>
        <xsd:complexType name="msisdnList">
            <xsd:annotation>
                <xsd:documentation>MSISDN list</xsd:documentation>
            </xsd:annotation>
            <xsd:sequence>
                <xsd:element name="msisdn" type="smd:msisdnType" maxOccurs="100"/>
            </xsd:sequence>
        </xsd:complexType>
        <xsd:complexType name="msisdnUnlimitedList">
            <xsd:annotation>
                <xsd:documentation>MSISDN Unlimited list</xsd:documentation>
            </xsd:annotation>
            <xsd:sequence>
                <xsd:element name="msisdn" type="smd:msisdnType" maxOccurs="unbounded"/>
            </xsd:sequence>
        </xsd:complexType>
        <xsd:simpleType name="messagePriority">
            <xsd:annotation>
                <xsd:documentation>Priority of the message to be emailed</xsd:documentation>
            </xsd:annotation>
            <xsd:restriction base="xsd:string">
                <xsd:enumeration value="Default"/>
                <xsd:enumeration value="Low"/>
                <xsd:enumeration value="Normal"/>
                <xsd:enumeration value="High"/>
            </xsd:restriction>
        </xsd:simpleType>
        <xsd:complexType name="sendEmail">
            <xsd:annotation>
                <xsd:documentation>The request structure to send email</xsd:documentation>
            </xsd:annotation>
            <xsd:sequence>
                <xsd:element name="senderAddress" type="smd:senderAddress"/>
                <xsd:element name="toAddress" type="smd:recipientAddress"/>
                <xsd:element name="subject" type="xsd:string"/>
                <xsd:element name="format" type="smd:format"/>
                <xsd:element name="message" type="xsd:string"/>
                <xsd:element name="disclaimerMessage" type="xsd:string" minOccurs="0"/>
            </xsd:sequence>
        </xsd:complexType>
        <xsd:complexType name="sendEmailResponse">
            <xsd:annotation>
                <xsd:documentation>
                    The response structure to hold the response after dispatch of Email
                </xsd:documentation>
            </xsd:annotation>
            <xsd:sequence>
                <xsd:element name="status" type="smd:ServiceResultType"/>
            </xsd:sequence>
        </xsd:complexType>
        <xsd:complexType name="queryReceiptStatus">
            <xsd:annotation>
                <xsd:documentation>Query receipt status</xsd:documentation>
            </xsd:annotation>
            <xsd:sequence>
                <xsd:element name="queryTransactionId" type="xsd:string"/>
                <xsd:element name="applicationReference" type="xsd:string" minOccurs="0"/>
                <xsd:element name="subMerchantId" type="xsd:string" minOccurs="0"/>
            </xsd:sequence>
        </xsd:complexType>
        <xsd:complexType name="queryReceiptStatusResponse">
            <xsd:annotation>
                <xsd:documentation>Query receipt status response</xsd:documentation>
            </xsd:annotation>
            <xsd:sequence>
                <xsd:element name="result" type="smd:resultType"/>
            </xsd:sequence>
        </xsd:complexType>
        <xsd:complexType name="sendDynamicSMS">
            <xsd:annotation>
                <xsd:documentation>Send dynamic SMS</xsd:documentation>
            </xsd:annotation>
            <xsd:sequence>
                <xsd:element name="msisdnList" type="smd:msisdnList"/>
                <xsd:element name="originator" type="xsd:string"/>
                <xsd:element name="receiptURL" type="xsd:string" minOccurs="0"/>
                <xsd:element name="message" type="xsd:anyType"/>
                <xsd:element name="messageType" type="smd:messageType"/>
                <xsd:element name="ttl" type="xsd:int"/>
                <xsd:element name="mtprofile" type="xsd:string"/>
                <xsd:element name="applicationReference" type="xsd:string" minOccurs="0"/>
                <xsd:element name="subMerchantId" type="xsd:string" minOccurs="0"/>
            </xsd:sequence>
        </xsd:complexType>
        <xsd:complexType name="sendDynamicSMSResponse">
            <xsd:annotation>
                <xsd:documentation>Send dynamic SMS response</xsd:documentation>
            </xsd:annotation>
            <xsd:sequence>
                <xsd:element name="result" type="smd:resultType"/>
            </xsd:sequence>
        </xsd:complexType>
        <xsd:complexType name="sendMultiSMS">
            <xsd:annotation>
                <xsd:documentation>Send multi SMS</xsd:documentation>
            </xsd:annotation>
            <xsd:sequence>
                <xsd:sequence>
                    <xsd:element name="receiptURL" type="xsd:string" minOccurs="0"/>
                    <xsd:element name="messageType" type="smd:messageType"/>
                    <xsd:element name="ttl" type="xsd:int"/>
                    <xsd:element name="mtprofile" type="xsd:string"/>
                    <xsd:element name="messageRecipient" type="smd:messageRecipient" maxOccurs="100"/>
                    <xsd:element name="applicationReference" type="xsd:string" minOccurs="0"/>
                    <xsd:element name="subMerchantId" type="xsd:string" minOccurs="0"/>
                </xsd:sequence>
            </xsd:sequence>
        </xsd:complexType>
        <xsd:complexType name="sendMultiSMSResponse">
            <xsd:annotation>
                <xsd:documentation>Send multi SMS response</xsd:documentation>
            </xsd:annotation>
            <xsd:sequence>
                <xsd:element name="result" type="smd:resultType"/>
            </xsd:sequence>
        </xsd:complexType>
        <xsd:complexType name="senderAddress">
            <xsd:annotation>
                <xsd:documentation>The sender address structure</xsd:documentation>
            </xsd:annotation>
            <xsd:sequence>
                <xsd:element name="friendlyName" type="xsd:string" minOccurs="0"/>
                <xsd:element name="emailAddress" type="smd:emailAddressType"/>
            </xsd:sequence>
        </xsd:complexType>
        <xsd:complexType name="recipientAddress">
            <xsd:annotation>
                <xsd:documentation>The recipient address structure</xsd:documentation>
            </xsd:annotation>
            <xsd:sequence>
                <xsd:element name="friendlyName" type="xsd:string" minOccurs="0"/>
                <xsd:element name="emailAddress" type="smd:emailAddressType"/>
                <xsd:element name="recipientType" type="smd:recipientType"/>
            </xsd:sequence>
        </xsd:complexType>
        <xsd:simpleType name="recipientType">
            <xsd:annotation>
                <xsd:documentation>The recipient type structure</xsd:documentation>
            </xsd:annotation>
            <xsd:restriction base="xsd:string">
                <xsd:enumeration value="to"/>
                <xsd:enumeration value="cc"/>
                <xsd:enumeration value="bcc"/>
            </xsd:restriction>
        </xsd:simpleType>
        <xsd:simpleType name="format">
            <xsd:annotation>
                <xsd:documentation>The email format</xsd:documentation>
            </xsd:annotation>
            <xsd:restriction base="xsd:string">
                <xsd:enumeration value="plain"/>
                <xsd:enumeration value="html"/>
            </xsd:restriction>
        </xsd:simpleType>
        <xsd:complexType name="sendMMS">
            <xsd:annotation>
                <xsd:documentation>Request to send MMS to MSISDN mentioned in addresses</xsd:documentation>
            </xsd:annotation>
            <xsd:sequence>
                <xsd:element name="msisdnList" type="smd:msisdnUnlimitedList"/>
                <xsd:element name="senderAddress" type="xsd:string" minOccurs="0"/>
                <xsd:element name="subject" type="xsd:string" minOccurs="0"/>
                <xsd:element name="priority" type="smd:messagePriority" minOccurs="0"/>
                <xsd:element name="charging" type="smd:chargingInformation" minOccurs="0"/>
                <xsd:element name="receiptRequest" type="smd:simpleReference" minOccurs="0"/>
            </xsd:sequence>
        </xsd:complexType>
        <xsd:complexType name="sendMMSResponse">
            <xsd:annotation>
                <xsd:documentation>send MMS Response</xsd:documentation>
            </xsd:annotation>
            <xsd:sequence>
                <xsd:element name="result" type="xsd:string"/>
            </xsd:sequence>
        </xsd:complexType>
        <xsd:complexType name="chargingInformation">
            <xsd:annotation>
                <xsd:documentation>Charging information</xsd:documentation>
            </xsd:annotation>
            <xsd:sequence>
                <xsd:element name="description" type="xsd:string"/>
                <xsd:element name="currency" type="xsd:string" minOccurs="0"/>
                <xsd:element name="amount" type="xsd:decimal" minOccurs="0"/>
                <xsd:element name="code" type="xsd:string" minOccurs="0"/>
            </xsd:sequence>
        </xsd:complexType>
        <xsd:complexType name="simpleReference">
            <xsd:annotation>
                <xsd:documentation>Simple Reference</xsd:documentation>
            </xsd:annotation>
            <xsd:sequence>
                <xsd:element name="endpoint" type="xsd:anyURI"/>
                <xsd:element name="interfaceName" type="xsd:string"/>
                <xsd:element name="correlator" type="xsd:string"/>
            </xsd:sequence>
        </xsd:complexType>
        <xsd:complexType name="messageRecipient">
            <xsd:annotation>
                <xsd:documentation>Message recipient</xsd:documentation>
            </xsd:annotation>
            <xsd:sequence>
                <xsd:element name="msisdn" type="smd:msisdnType"/>
                <xsd:element name="message" type="xsd:string"/>
            </xsd:sequence>
        </xsd:complexType>
        <xsd:simpleType name="messageType">
            <xsd:restriction base="xsd:string">
                <xsd:enumeration value="TXT"/>
                <xsd:enumeration value="FLA"/>
                <xsd:enumeration value="PIC"/>
                <xsd:enumeration value="LOG"/>
                <xsd:enumeration value="RTN"/>
                <xsd:enumeration value="RPR"/>
                <xsd:enumeration value="WAP"/>
                <xsd:enumeration value="BIN"/>
            </xsd:restriction>
        </xsd:simpleType>
        <xsd:simpleType name="emailAddressType">
            <xsd:annotation>
                <xsd:documentation>The restriction for an email address format</xsd:documentation>
            </xsd:annotation>
            <xsd:restriction base="xsd:string">
                <xsd:pattern value="([\.a-zA-Z0-9_\-])+@([a-zA-Z0-9_\-])+(([a-zA-Z0-9_\-])*\.([a-zA-Z0-9_\-])+)+"/>
            </xsd:restriction>
        </xsd:simpleType>
    </xsd:schema>


    </wsdl:types>




    <wsdl:message name="sendSMS">
        <wsdl:part name="sendSMS" element="smd:sendSMS"/>
    </wsdl:message>
    <wsdl:message name="sendSMSResponse">
        <wsdl:part name="sendSMSResponse" element="smd:sendSMSResponse"/>
    </wsdl:message>
    <wsdl:message name="sendSMSFault">
        <wsdl:part name="sendSMSFault" element="smd:sendSMSFault"/>
    </wsdl:message>
    <wsdl:message name="sendMMS">
        <wsdl:part name="sendMMS" element="smd:sendMMS"/>
    </wsdl:message>
    <wsdl:message name="sendMMSResponse">
        <wsdl:part name="sendMMSResponse" element="smd:sendMMSResponse"/>
    </wsdl:message>
    <wsdl:message name="sendMMSFault">
        <wsdl:part name="sendMMSFault" element="smd:sendMMSFault"/>
    </wsdl:message>
    <wsdl:message name="sendEmail">
        <wsdl:part name="sendEmail" element="smd:sendEmail"/>
    </wsdl:message>
    <wsdl:message name="sendEmailResponse">
        <wsdl:part name="sendEmailResponse" element="smd:sendEmailResponse"/>
    </wsdl:message>
    <wsdl:message name="sendEmailFault">
        <wsdl:part name="sendEmailFault" element="smd:sendEmailFault"/>
    </wsdl:message>
    <wsdl:message name="queryReceiptStatus">
        <wsdl:part name="queryReceiptStatus" element="smd:queryReceiptStatus"/>
    </wsdl:message>
    <wsdl:message name="queryReceiptStatusResponse">
        <wsdl:part name="queryReceiptStatusResponse" element="smd:queryReceiptStatusResponse"/>
    </wsdl:message>
    <wsdl:message name="queryReceiptStatusFault">
        <wsdl:part name="queryReceiptStatusFault" element="smd:queryReceiptStatusFault"/>
    </wsdl:message>
    <wsdl:message name="sendDynamicSMS">
        <wsdl:part name="sendDynamicSMS" element="smd:sendDynamicSMS"/>
    </wsdl:message>
    <wsdl:message name="sendDynamicSMSResponse">
        <wsdl:part name="sendDynamicSMSResponse" element="smd:sendDynamicSMSResponse"/>
    </wsdl:message>
    <wsdl:message name="sendDynamicSMSFault">
        <wsdl:part name="sendDynamicSMSFault" element="smd:sendDynamicSMSFault"/>
    </wsdl:message>
    <wsdl:message name="sendMultiSMS">
        <wsdl:part name="sendMultiSMS" element="smd:sendMultiSMS"/>
    </wsdl:message>
    <wsdl:message name="sendMultiSMSResponse">
        <wsdl:part name="sendMultiSMSResponse" element="smd:sendMultiSMSResponse"/>
    </wsdl:message>
    <wsdl:message name="sendMultiSMSFault">
        <wsdl:part name="sendMultiSMSFault" element="smd:sendMultiSMSFault"/>
    </wsdl:message>





    <wsdl:portType name="SendMessagePortType">
        <wsdl:operation name="sendSMS">
            <wsdl:documentation>This operation is used to send SMS message</wsdl:documentation>
            <wsdl:input name="sendSMS" message="sms:sendSMS"/>
            <wsdl:output name="sendSMSResponse" message="sms:sendSMSResponse"/>
            <wsdl:fault name="sendSMSFault" message="sms:sendSMSFault"/>
        </wsdl:operation>
        <wsdl:operation name="sendMMS">
            <wsdl:documentation>This operation is used send MMS messages</wsdl:documentation>
            <wsdl:input name="sendMMS" message="sms:sendMMS"/>
            <wsdl:output name="sendMMSResponse" message="sms:sendMMSResponse"/>
            <wsdl:fault name="sendMMSFault" message="sms:sendMMSFault"/>
        </wsdl:operation>
        <wsdl:operation name="sendEmail">
            <wsdl:documentation>This operation is used to send Email messages</wsdl:documentation>
            <wsdl:input name="sendEmail" message="sms:sendEmail"/>
            <wsdl:output name="sendEmailResponse" message="sms:sendEmailResponse"/>
            <wsdl:fault name="sendEmailFault" message="sms:sendEmailFault"/>
        </wsdl:operation>
        <wsdl:operation name="queryReceiptStatus">
            <wsdl:input name="queryReceiptStatus" message="sms:queryReceiptStatus"/>
            <wsdl:output name="queryReceiptStatusResponse" message="sms:queryReceiptStatusResponse"/>
            <wsdl:fault name="queryReceiptStatusFault" message="sms:queryReceiptStatusFault"/>
        </wsdl:operation>
        <wsdl:operation name="sendDynamicSMS">
            <wsdl:input name="sendDynamicSMS" message="sms:sendDynamicSMS"/>
            <wsdl:output name="sendDynamicSMSResponse" message="sms:sendDynamicSMSResponse"/>
            <wsdl:fault name="sendDynamicSMSFault" message="sms:sendDynamicSMSFault"/>
        </wsdl:operation>
        <wsdl:operation name="sendMultiSMS">
            <wsdl:input name="sendMultiSMS" message="sms:sendMultiSMS"/>
            <wsdl:output name="sendMultiSMSResponse" message="sms:sendMultiSMSResponse"/>
            <wsdl:fault name="sendMultiSMSFault" message="sms:sendMultiSMSFault"/>
        </wsdl:operation>
    </wsdl:portType>
    <wsdl:binding name="SendMessageBinding" type="sms:SendMessagePortType">
        <soap:binding style="document" transport="http://schemas.xmlsoap.org/soap/http"/>
        <wsdl:operation name="sendSMS">
            <soap:operation soapAction=""/>
            <wsdl:input name="sendSMS">
                <soap:body parts="sendSMS" use="literal"/>
            </wsdl:input>
            <wsdl:output name="sendSMSResponse">
                <soap:body parts="sendSMSResponse" use="literal"/>
            </wsdl:output>
            <wsdl:fault name="sendSMSFault">
                <soap:fault name="sendSMSFault" use="literal"/>
            </wsdl:fault>
        </wsdl:operation>
        <wsdl:operation name="sendMMS">
            <soap:operation soapAction=""/>
            <wsdl:input name="sendMMS">
                <soap:body parts="sendMMS" use="literal"/>
            </wsdl:input>
            <wsdl:output name="sendMMSResponse">
                <soap:body parts="sendMMSResponse" use="literal"/>
            </wsdl:output>
            <wsdl:fault name="sendMMSFault">
                <soap:fault name="sendMMSFault" use="literal"/>
            </wsdl:fault>
        </wsdl:operation>
        <wsdl:operation name="sendEmail">
            <soap:operation soapAction=""/>
            <wsdl:input name="sendEmail">
                <soap:body parts="sendEmail" use="literal"/>
            </wsdl:input>
            <wsdl:output name="sendEmailResponse">
                <soap:body parts="sendEmailResponse" use="literal"/>
            </wsdl:output>
            <wsdl:fault name="sendEmailFault">
                <soap:fault name="sendEmailFault" use="literal"/>
            </wsdl:fault>
        </wsdl:operation>
        <wsdl:operation name="queryReceiptStatus">
            <soap:operation soapAction=""/>
            <wsdl:input name="queryReceiptStatus">
                <soap:body parts="queryReceiptStatus" use="literal"/>
            </wsdl:input>
            <wsdl:output name="queryReceiptStatusResponse">
                <soap:body parts="queryReceiptStatusResponse" use="literal"/>
            </wsdl:output>
            <wsdl:fault name="queryReceiptStatusFault">
                <soap:fault name="queryReceiptStatusFault" use="literal"/>
            </wsdl:fault>
        </wsdl:operation>
        <wsdl:operation name="sendDynamicSMS">
            <soap:operation soapAction=""/>
            <wsdl:input name="sendDynamicSMS">
                <soap:body parts="sendDynamicSMS" use="literal"/>
            </wsdl:input>
            <wsdl:output name="sendDynamicSMSResponse">
                <soap:body parts="sendDynamicSMSResponse" use="literal"/>
            </wsdl:output>
            <wsdl:fault name="sendDynamicSMSFault">
                <soap:fault name="sendDynamicSMSFault" use="literal"/>
            </wsdl:fault>
        </wsdl:operation>
        <wsdl:operation name="sendMultiSMS">
            <soap:operation soapAction=""/>
            <wsdl:input name="sendMultiSMS">
                <soap:body parts="sendMultiSMS" use="literal"/>
            </wsdl:input>
            <wsdl:output name="sendMultiSMSResponse">
                <soap:body parts="sendMultiSMSResponse" use="literal"/>
            </wsdl:output>
            <wsdl:fault name="sendMultiSMSFault">
                <soap:fault name="sendMultiSMSFault" use="literal"/>
            </wsdl:fault>
        </wsdl:operation>
    </wsdl:binding>
    <wsdl:service name="SendMessage">
        <wsdl:port name="SendMessagePortType" binding="sms:SendMessageBinding">
            <soap:address location="https://sdpapi.o2.co.uk/services/SendMessage_1_1"/>
        </wsdl:port>
    </wsdl:service>
</wsdl:definitions>
