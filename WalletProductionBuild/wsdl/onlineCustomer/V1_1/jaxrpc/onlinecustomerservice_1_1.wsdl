<?xml version="1.0" encoding="UTF-8"?>
<wsdl:definitions name="OnlineCustomer"
                  targetNamespace="http://soa.o2.co.uk/onlinecustomerservice_1"
                  xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/"
                  xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/"
                  xmlns:ocs="http://soa.o2.co.uk/onlinecustomerservice_1"
                  xmlns:ocd="http://soa.o2.co.uk/onlinecustomerdata_1"
                  xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:types>


        <xsd:schema targetNamespace="http://soa.o2.co.uk/onlinecustomerdata_1"
                    elementFormDefault="qualified"
                    attributeFormDefault="unqualified"
                    xmlns:xsd="http://www.w3.org/2001/XMLSchema"
                    xmlns:ocd="http://soa.o2.co.uk/onlinecustomerdata_1">


            <xsd:complexType name="SOAFaultType">
                <xsd:annotation>
                    <xsd:documentation>
                        The type of the response sent to the calling
                        application, if something goes wrong.
                    </xsd:documentation>
                </xsd:annotation>
                <xsd:sequence>
                    <xsd:element ref="ocd:SOAFaultOriginator"/>
                    <xsd:element ref="ocd:SOAFaultCode"/>
                    <xsd:element name="faultDescription" type="xsd:string"
                                 minOccurs="0">
                        <xsd:annotation>
                            <xsd:documentation>
                                A human readable description of the error.
                            </xsd:documentation>
                        </xsd:annotation>
                    </xsd:element>
                    <xsd:element name="faultTrace" type="xsd:string"
                                 minOccurs="0">
                        <xsd:annotation>
                            <xsd:documentation>
                                A computer generated dump of the fault (may help
                                in debugging problems).
                            </xsd:documentation>
                        </xsd:annotation>
                    </xsd:element>
                    <xsd:element ref="ocd:SOATransactionID" minOccurs="0"/>
                </xsd:sequence>
            </xsd:complexType>
            <xsd:element name="SOAFault" type="ocd:SOAFaultType">
                <xsd:annotation>
                    <xsd:documentation>
                        The response sent to the calling application, if
                        something goes wrong.
                    </xsd:documentation>
                </xsd:annotation>
            </xsd:element>
            <xsd:element name="SOAFaultCode" type="xsd:string">
                <xsd:annotation>
                    <xsd:documentation>
                        A numeric representation of a fault (should be included
                        in errors.xml).
                    </xsd:documentation>
                </xsd:annotation>
            </xsd:element>
            <xsd:element name="SOAFaultOriginator" type="xsd:string">
                <xsd:annotation>
                    <xsd:documentation>
                        A representation of where a fault originates (should be
                        included in errors.xml).
                    </xsd:documentation>
                </xsd:annotation>
            </xsd:element>
            <xsd:element name="SOATransactionID" type="xsd:string">
                <xsd:annotation>
                    <xsd:documentation>
                        The transaction ID generated by the ESB.
                    </xsd:documentation>
                </xsd:annotation>
            </xsd:element>
            <xsd:element name="SOAConsumerTransactionID" type="xsd:string">
                <xsd:annotation>
                    <xsd:documentation>
                        A transaction ID supplied by the calling aplication. It
                        will not be processed but is passed through and logged
                        by all underlying services (aids in debugging problems).
                    </xsd:documentation>
                </xsd:annotation>
            </xsd:element>
            <xsd:simpleType name="msisdnType">
                <xsd:annotation>
                    <xsd:documentation>
                        Mobile Phone numbers (MSISDNs) should always be defined
                        as strings, including country codes i.e. "447734123456";
                        and translated into localised formats on the
                        presentation and backend layers.
                    </xsd:documentation>
                </xsd:annotation>
                <xsd:restriction base="xsd:string"/>
            </xsd:simpleType>
            <xsd:simpleType name="billingAccountNumberType">
                <xsd:annotation>
                    <xsd:documentation>
                        A billing account, as it appears in the back end billing
                        system (Companion).
                    </xsd:documentation>
                </xsd:annotation>
                <xsd:restriction base="xsd:string">
                    <xsd:minLength value="6"/>
                    <xsd:maxLength value="20"/>
                </xsd:restriction>
            </xsd:simpleType>
            <xsd:simpleType name="portalIDType">
                <xsd:annotation>
                    <xsd:documentation>
                        The portal account username (i.e., Portal ID).
                        A portal account is normally of the form â€œjohn.smith@o2.co.uk".
                        The Portal ID in this example is "john.smith" and the domain is "o2.co.uk".
                    </xsd:documentation>
                </xsd:annotation>
                <xsd:restriction base="xsd:string"/>
            </xsd:simpleType>
            <xsd:complexType name="accountType">
                <xsd:annotation>
                    <xsd:documentation>
                        Data type to define a customers account. This could be
                        either a portal account, msisdn, or a companion account
                        and msisdn. Or a Bank Account program ID and account ID
                        (initially for Timberlake)
                    </xsd:documentation>
                </xsd:annotation>
                <xsd:choice>
                    <xsd:element name="portalID" type="ocd:portalIDType"/>
                    <xsd:element name="msisdn" type="ocd:msisdnType">
                        <xsd:annotation>
                            <xsd:documentation>
                                A msisdn, in international format i.e.,"447712345678"
                            </xsd:documentation>
                        </xsd:annotation>
                    </xsd:element>
                    <xsd:element name="accountDetail"
                                 type="ocd:accountDetail">
                        <xsd:annotation>
                            <xsd:documentation>
                                Account Details
                            </xsd:documentation>
                        </xsd:annotation>
                    </xsd:element>
                </xsd:choice>
            </xsd:complexType>

            <xsd:complexType name="accountDetail">
                <xsd:annotation>
                    <xsd:documentation>Account Details</xsd:documentation>
                </xsd:annotation>
                <xsd:sequence>
                    <xsd:element name="billingAccountType">
                        <xsd:annotation>
                            <xsd:documentation>
                                The type of account as it is defined in the
                                billing system (only "MOBILE" currently
                                defined).
                            </xsd:documentation>
                        </xsd:annotation>
                        <xsd:simpleType>
                            <xsd:restriction base="xsd:string">
                                <xsd:enumeration value="MOBILE"/>
                            </xsd:restriction>
                        </xsd:simpleType>
                    </xsd:element>
                    <xsd:element name="accountNumber"
                                 type="ocd:billingAccountNumberType">
                        <xsd:annotation>
                            <xsd:documentation>
                                The companion account.
                            </xsd:documentation>
                        </xsd:annotation>
                    </xsd:element>
                    <xsd:element name="msisdn" type="ocd:msisdnType">
                        <xsd:annotation>
                            <xsd:documentation>
                                The msisdn within the above account.
                            </xsd:documentation>
                        </xsd:annotation>
                    </xsd:element>
                </xsd:sequence>
            </xsd:complexType>

            <xsd:simpleType name="customerIDType">
                <xsd:annotation>
                    <xsd:documentation>
                        Main customerID for online services - this is the o2BFid
                        in CPDS at the moment
                    </xsd:documentation>
                </xsd:annotation>
                <xsd:restriction base="xsd:string"/>
            </xsd:simpleType>
            <xsd:complexType name="cashCardAccountType">
                <xsd:annotation>
                    <xsd:documentation>
                        Uniquely identifies the account in the Prepaid Banking
                        system that is being referred to.
                    </xsd:documentation>
                </xsd:annotation>
                <xsd:sequence>
                    <xsd:annotation>
                        <xsd:documentation>
                            Financial accounts need a programID and accountID
                            (Ref: Timberlake)
                        </xsd:documentation>
                    </xsd:annotation>
                    <xsd:element name="programID" type="xsd:long">
                        <xsd:annotation>
                            <xsd:documentation>
                                Identifies program. Translates into "Smart" or
                                "Freedom" with various limits
                            </xsd:documentation>
                        </xsd:annotation>
                    </xsd:element>
                    <xsd:element name="accountID" type="xsd:long">
                        <xsd:annotation>
                            <xsd:documentation>
                                Unique internal account ID on the TSYS platform.
                                Probably can be applied to other banking systems
                                as well.
                            </xsd:documentation>
                        </xsd:annotation>
                    </xsd:element>
                    <xsd:element name="userID" type="xsd:long" minOccurs="0"/>
                    <xsd:element name="cardID" type="xsd:long" minOccurs="0"/>
                </xsd:sequence>
            </xsd:complexType>
            <xsd:simpleType name="productIDType">
                <xsd:annotation>
                    <xsd:documentation>
                        Identifies a product - temporarily the same as o2BFID
                        (and hence customer ID)
                    </xsd:documentation>
                </xsd:annotation>
                <xsd:restriction base="xsd:string"/>
            </xsd:simpleType>
            <xsd:simpleType name="customerRoleType">
                <xsd:annotation>
                    <xsd:documentation>
                        The role concept from registration DB or A and R
                    </xsd:documentation>
                </xsd:annotation>
                <xsd:restriction base="xsd:string">
                    <xsd:enumeration value="admin"/>
                    <xsd:enumeration value="user"/>
                    <xsd:enumeration value="chooser"/>
                    <xsd:enumeration value="superuser"/>
                    <xsd:enumeration value="unknown"/>
                </xsd:restriction>
            </xsd:simpleType>
            <xsd:simpleType name="imsiType">
                <xsd:annotation>
                    <xsd:documentation>IMSI Number</xsd:documentation>
                </xsd:annotation>
                <xsd:restriction base="xsd:string"/>
            </xsd:simpleType>
            <xsd:simpleType name="imeiType">
                <xsd:annotation>
                    <xsd:documentation>IMEI Number</xsd:documentation>
                </xsd:annotation>
                <xsd:restriction base="xsd:string"/>
            </xsd:simpleType>
            <xsd:element name="subscriberProfile"
                         type="ocd:SubscriberProfileType">
                <xsd:annotation>
                    <xsd:documentation>
                        Subscriber Profile Element
                    </xsd:documentation>
                </xsd:annotation>
            </xsd:element>
            <xsd:complexType name="SubscriberProfileType">
                <xsd:annotation>
                    <xsd:documentation>
                        Complex Type that defines Subscriber Profile
                    </xsd:documentation>
                </xsd:annotation>
                <xsd:sequence>
                    <xsd:element ref="ocd:SubscriberID">
                        <xsd:annotation>
                            <xsd:documentation>
                                This refers to the MSISDN for Mobile subscribers
                            </xsd:documentation>
                        </xsd:annotation>
                    </xsd:element>
                    <xsd:element ref="ocd:Operator" minOccurs="0">
                        <xsd:annotation>
                            <xsd:documentation>
                                Operator ID for the particular subscriber
                            </xsd:documentation>
                        </xsd:annotation>
                    </xsd:element>
                    <xsd:element ref="ocd:PaymentCategory" minOccurs="0">
                        <xsd:annotation>
                            <xsd:documentation>
                                Type of payment, Prepay of Postpay
                            </xsd:documentation>
                        </xsd:annotation>
                    </xsd:element>
                    <xsd:element ref="ocd:Segment" minOccurs="0">
                        <xsd:annotation>
                            <xsd:documentation>
                                Segment of Subscriber, corporate, consumer, ISP
                                etc.
                            </xsd:documentation>
                        </xsd:annotation>
                    </xsd:element>
                    <xsd:element name="channel" type="xsd:string" minOccurs="0"/>
                    <xsd:element name="ServiceProviderID" type="xsd:long"
                                 minOccurs="0">
                        <xsd:annotation>
                            <xsd:documentation>
                                SPID which is a unique value for the type of O2
                                Service Provider like Tesco, CPW etc.
                            </xsd:documentation>
                        </xsd:annotation>
                    </xsd:element>
                    <xsd:element name="Status" type="xsd:string"/>
                </xsd:sequence>
            </xsd:complexType>
            <xsd:element name="Operator" type="xsd:string">
                <xsd:annotation>
                    <xsd:documentation>
                        O2 UK, Tesco or Other normally
                    </xsd:documentation>
                </xsd:annotation>
            </xsd:element>
            <xsd:element name="Segment" type="ocd:SegmentType">
                <xsd:annotation>
                    <xsd:documentation>
                        The P and L definition of Consumer/SME/Corp
                    </xsd:documentation>
                </xsd:annotation>
            </xsd:element>
            <xsd:simpleType name="SegmentType">
                <xsd:annotation>
                    <xsd:documentation>
                        main ones listed - could be others
                    </xsd:documentation>
                </xsd:annotation>
                <xsd:restriction base="xsd:string">
                    <xsd:enumeration value="Consumer"/>
                    <xsd:enumeration value="SME"/>
                    <xsd:enumeration value="Corporate"/>
                    <xsd:enumeration value="ISP"/>
                    <xsd:enumeration value="Unknown"/>
                </xsd:restriction>
            </xsd:simpleType>
            <xsd:element name="Channel" type="xsd:string">
                <xsd:annotation>
                    <xsd:documentation>
                        The sales channel that owns the subscriber
                    </xsd:documentation>
                </xsd:annotation>
            </xsd:element>
            <xsd:element name="SubscriberID" type="ocd:msisdnType">
                <xsd:annotation>
                    <xsd:documentation>
                        Subscriber ID that is unique identifier of the
                        subscriber eg: MSISDN no is subscriberID for Mobile
                        users
                    </xsd:documentation>
                </xsd:annotation>
            </xsd:element>
            <xsd:element name="PaymentCategory"
                         type="ocd:PaymentCategoryType">
                <xsd:annotation>
                    <xsd:documentation>
                        Divides between pay and go/pay monthly
                    </xsd:documentation>
                </xsd:annotation>
            </xsd:element>
            <xsd:simpleType name="PaymentCategoryType">
                <xsd:annotation>
                    <xsd:documentation>
                        two values postpay or prepay
                    </xsd:documentation>
                </xsd:annotation>
                <xsd:restriction base="xsd:string">
                    <xsd:enumeration value="Prepay"/>
                    <xsd:enumeration value="Postpay"/>
                    <xsd:enumeration value="Unknown"/>
                </xsd:restriction>
            </xsd:simpleType>
            <xsd:complexType name="ServiceResultType">
                <xsd:annotation>
                    <xsd:documentation>
                        This data type represents the status recieved from a
                        service for a task that might be earlier assigned to
                        that service.
                    </xsd:documentation>
                </xsd:annotation>
                <xsd:sequence>
                    <xsd:element name="statusCode" type="xsd:string">
                        <xsd:annotation>
                            <xsd:documentation>
                                A unique code assigned to the status from the
                                service. A set of status codes can be defined
                                for services based on the context. A stausCode
                                will be suffixed with "S" for success, "F" for
                                failure and "E" for Error and "P" for Pending to
                                describe the type of status recieved from
                                service.
                            </xsd:documentation>
                        </xsd:annotation>
                    </xsd:element>
                    <xsd:element name="externalDescription" type="xsd:string">
                        <xsd:annotation>
                            <xsd:documentation>
                                A description of status in human-readble form
                                that has to be sent to the end-user.
                            </xsd:documentation>
                        </xsd:annotation>
                    </xsd:element>
                    <xsd:element name="internalDescription" type="xsd:string"
                                 minOccurs="0">
                        <xsd:annotation>
                            <xsd:documentation>
                                This is an optional description of the status
                                which is meant for logging purpose. This may
                                contain the java stack trace or Database error
                                trace based on the context.
                            </xsd:documentation>
                        </xsd:annotation>
                    </xsd:element>
                </xsd:sequence>
            </xsd:complexType>
            <xsd:complexType name="MapItem">
                <xsd:annotation>
                    <xsd:documentation>
                        An individual Item that carries key-value pair for
                        extensible properties
                    </xsd:documentation>
                </xsd:annotation>
                <xsd:sequence>
                    <xsd:element name="key" type="xsd:string"/>
                    <xsd:choice>
                        <xsd:annotation>
                            <xsd:documentation>
                                Only the relevant elemt is populated based on
                                the type of the parameter.
                            </xsd:documentation>
                        </xsd:annotation>
                        <xsd:element name="intValue" type="xsd:integer"/>
                        <xsd:element name="strValue" type="xsd:string"/>
                        <xsd:element name="boolValue" type="xsd:boolean"/>
                    </xsd:choice>
                </xsd:sequence>
            </xsd:complexType>
            <xsd:complexType name="MapType">
                <xsd:annotation>
                    <xsd:documentation>
                        A generic extensible complex type that can be used to
                        send multiple name-value pairs
                    </xsd:documentation>
                </xsd:annotation>
                <xsd:sequence>
                    <xsd:element name="mapItem" type="ocd:MapItem"
                                 minOccurs="0" maxOccurs="unbounded"/>
                </xsd:sequence>
            </xsd:complexType>
            <xsd:simpleType name="StatusCodeType">
                <xsd:annotation>
                    <xsd:documentation>
                        This is borrowed from SPML definition of a status code -
                        the pending status is a bit debatable
                    </xsd:documentation>
                </xsd:annotation>
                <xsd:restriction base="xsd:string">
                    <xsd:enumeration value="success"/>
                    <xsd:enumeration value="failure"/>
                    <xsd:enumeration value="error"/>
                    <xsd:enumeration value="pending"/>
                    <xsd:enumeration value="expired"/>
                </xsd:restriction>
            </xsd:simpleType>
            <xsd:element name="applicationID" type="xsd:string">
                <xsd:annotation>
                    <xsd:documentation>
                        applicationID is part of request identifier handled by
                        SOA Access Gateway. Application ID uniquely identifies
                        the name of consuming application. Example - DASHB, IVR,
                        WAP, etc
                    </xsd:documentation>
                </xsd:annotation>
            </xsd:element>
            <xsd:element name="providerID" type="xsd:string">
                <xsd:annotation>
                    <xsd:documentation>
                        providerID is also part of request identifier handled by
                        SOA Access Gateway. Provider ID identifies the company
                        that provides a functionality to end customers by
                        invoking this specific service. Example - O2, Tesco, Car
                        Phone Warehouse
                    </xsd:documentation>
                </xsd:annotation>
            </xsd:element>
            <xsd:element name="originatorIP" type="xsd:string">
                <xsd:annotation>
                    <xsd:documentation>
                        This parameter indicates the IP address of the
                        originating system. This parameter will be added by the
                        SOA Access Gateway
                    </xsd:documentation>
                </xsd:annotation>
            </xsd:element>
            <xsd:simpleType name="mobileAccessIdType">
                <xsd:annotation>
                    <xsd:documentation>
                        Mobile Access Id is Hash id which is same as the UID
                        generated by Wap Gateway
                    </xsd:documentation>
                </xsd:annotation>
                <xsd:restriction base="xsd:string"/>
            </xsd:simpleType>
            <xsd:element name="debugFlag" type="xsd:string">
                <xsd:annotation>
                    <xsd:documentation>
                        This parameter indicates whether we should log or not,
                        Used for debugging perspective from a Support
                        Perspective.
                    </xsd:documentation>
                </xsd:annotation>
            </xsd:element>

            <xsd:simpleType name="cardHolderNameType">
                <xsd:annotation>
                    <xsd:documentation>
                        The customer name on the Credit or Debit Card
                    </xsd:documentation>
                </xsd:annotation>
                <xsd:restriction base="xsd:string"/>
            </xsd:simpleType>

            <xsd:simpleType name="cardIssueDateType">
                <xsd:annotation>
                    <xsd:documentation>
                        The date when the card was issued. In MM/YY format. It
                        is important that the month comes first followed by the
                        year.
                    </xsd:documentation>
                </xsd:annotation>
                <xsd:restriction base="xsd:string">
                    <xsd:minLength value="1"/>
                    <xsd:maxLength value="5"/>
                    <xsd:pattern value="\d{2}/\d{2}"/>
                </xsd:restriction>
            </xsd:simpleType>

            <xsd:simpleType name="cardExpiryDateType">
                <xsd:annotation>
                    <xsd:documentation>
                        The card expiry date. In MM/YY format. It is important
                        that the month comes first followed by the year.
                    </xsd:documentation>
                </xsd:annotation>
                <xsd:restriction base="xsd:string">
                    <xsd:minLength value="1"/>
                    <xsd:maxLength value="5"/>
                    <xsd:pattern value="\d{2}/\d{2}"/>
                </xsd:restriction>
            </xsd:simpleType>

            <xsd:simpleType name="cardNumberType">
                <xsd:annotation>
                    <xsd:documentation>
                        The Credit/Debit Card Number(without spaces)
                    </xsd:documentation>
                </xsd:annotation>
                <xsd:restriction base="xsd:string">
                    <xsd:pattern value="\d{12,20}"/>
                </xsd:restriction>
            </xsd:simpleType>

            <xsd:simpleType name="cardCV2Type">
                <xsd:annotation>
                    <xsd:documentation>
                        The verification number printed on the back of the
                        credit/debit card. The CardCV2 usually a 3 or 4 digit
                        code on the back of card.
                    </xsd:documentation>
                </xsd:annotation>
                <xsd:restriction base="xsd:string">
                    <xsd:minLength value="1"/>
                    <xsd:maxLength value="5"/>
                </xsd:restriction>
            </xsd:simpleType>

            <xsd:simpleType name="cardIssueNumberType">
                <xsd:annotation>
                    <xsd:documentation>
                        The Credit or Debit Card Issue Number
                    </xsd:documentation>
                </xsd:annotation>
                <xsd:restriction base="xsd:string">
                    <xsd:minLength value="1"/>
                    <xsd:maxLength value="2"/>
                </xsd:restriction>
            </xsd:simpleType>

            <xsd:simpleType name="cardIssuerType">
                <xsd:annotation>
                    <xsd:documentation>The Bank Card Issuer</xsd:documentation>
                </xsd:annotation>
                <xsd:restriction base="xsd:string">
                    <xsd:enumeration value="MAESTRO"/>
                    <xsd:enumeration value="SOLO"/>
                    <xsd:enumeration value="VISA"/>
                    <xsd:enumeration value="MASTERCARD"/>
                    <xsd:enumeration value="DELTA"/>
                    <xsd:enumeration value="AMEX"/>
                    <xsd:enumeration value="ELECTRON"/>
                </xsd:restriction>
            </xsd:simpleType>

            <xsd:simpleType name="customerTierType">
                <xsd:annotation>
                    <xsd:documentation>
                        Customer friendly description for various segmentation
                        keys. Allowed values are Platinum, Gold, Silver, Bronze,
                        Blue, Unknown

                        Segmentation Key Customer Tier value Platinum Platinum
                        Gold Gold Silver Silver Bronze Bronze Select Gold none
                        Blue Sel_Inv Silver Sel_Few Platinum
                    </xsd:documentation>
                </xsd:annotation>
                <xsd:restriction base="xsd:string">
                    <xsd:enumeration value="Platinum"></xsd:enumeration>
                    <xsd:enumeration value="Gold"></xsd:enumeration>
                    <xsd:enumeration value="Silver"></xsd:enumeration>
                    <xsd:enumeration value="Bronze"></xsd:enumeration>
                    <xsd:enumeration value="Blue"></xsd:enumeration>
                    <xsd:enumeration value="Unknown"></xsd:enumeration>
                </xsd:restriction>
            </xsd:simpleType>

            <xsd:simpleType name="emailAddressType">
                <xsd:annotation>
                    <xsd:documentation>The email address</xsd:documentation>
                </xsd:annotation>
                <xsd:restriction base="xsd:string"/>
            </xsd:simpleType>

            <xsd:simpleType name="postcodeType">
                <xsd:annotation>
                    <xsd:documentation>The Postcode</xsd:documentation>
                </xsd:annotation>
                <xsd:restriction base="xsd:string"/>
            </xsd:simpleType>

            <!-- v1.0.3: Adding bank related information  -->
            <xsd:simpleType name="bankAccountNumberType">
                <xsd:annotation>
                    <xsd:documentation>
                        The Bank Account number
                    </xsd:documentation>
                </xsd:annotation>
                <xsd:restriction base="xsd:string"/>
            </xsd:simpleType>

            <xsd:simpleType name="bankSortCodeType">
                <xsd:annotation>
                    <xsd:documentation>
                        The Bank Sort code.(Ex:40-42-08)
                    </xsd:documentation>
                </xsd:annotation>
                <xsd:restriction base="xsd:string">
                    <xsd:minLength value="8"/>
                    <xsd:maxLength value="8"/>
                    <xsd:pattern value="\d{2}(-)\d{2}(-)\d{2}"/>
                </xsd:restriction>
            </xsd:simpleType>

            <xsd:simpleType name="bankAccountHolderNameType">
                <xsd:annotation>
                    <xsd:documentation>
                        The Bank Account holder name.
                    </xsd:documentation>
                </xsd:annotation>
                <xsd:restriction base="xsd:string"/>
            </xsd:simpleType>
            <!-- v1.0.3: Ends -->

            <xsd:simpleType name="spidType">
                <xsd:annotation>
                    <xsd:documentation>
                        The service provider identifier.
                    </xsd:documentation>
                </xsd:annotation>
                <xsd:restriction base="xsd:string"/>
            </xsd:simpleType>

            <xsd:simpleType name="maskedCardNumberType">
                <xsd:annotation>
                    <xsd:documentation>
                        The Credit/Debit Card Number(without spaces).This
                        element is used to represent the masked data. Ex: If the
                        card number value is 5683387298913746 and it needs to be
                        represented as ************3746, then this data type is
                        used.
                    </xsd:documentation>
                </xsd:annotation>
                <xsd:restriction base="xsd:string"/>
            </xsd:simpleType>
            <xsd:simpleType name="maskedBankAccountNumberType">
                <xsd:annotation>
                    <xsd:documentation>
                        This type should be used to render a masked
                        representation of the bank account number. Ex: If the
                        bank account number value is 5683387298913746 and it
                        needs to be represented as ************3746, then this
                        data type is used.
                    </xsd:documentation>
                </xsd:annotation>
                <xsd:restriction base="xsd:string"/>
            </xsd:simpleType>

            <xsd:simpleType name="ssnType">
                <xsd:annotation>
                    <xsd:documentation>Sim Serial Number</xsd:documentation>
                </xsd:annotation>
                <xsd:restriction base="xsd:string">
                    <xsd:minLength value="1"/>
                    <xsd:maxLength value="20"/>
                </xsd:restriction>
            </xsd:simpleType>

            <xsd:simpleType name="userIdType">
                <xsd:annotation>
                    <xsd:documentation>
                        Unique customer identifier, an example would be the Id
                        of a CSA who initiated an activity.
                    </xsd:documentation>
                </xsd:annotation>
                <xsd:restriction base="xsd:string">
                    <xsd:maxLength value="30"/>
                    <xsd:minLength value="1"/>
                </xsd:restriction>
            </xsd:simpleType>

            <xsd:simpleType name="ipAddressType">
                <xsd:annotation>
                    <xsd:documentation>
                        This can be an IPv4 address in dotted decimal format,
                        (i.e. DDD.DDD.DDD.DDD, where D represents a digit). OR
                        It can be an IPv6 address in hexadecimal format,
                        (i.e. xxxx:xxxx:xxxx:xxxx:xxxx:xxxx:xxxx:xxxx, where x represents a hex value).
                    </xsd:documentation>
                </xsd:annotation>
                <xsd:restriction base="xsd:string"/>
            </xsd:simpleType>

            <xsd:simpleType name="landlineNumberType">
                <xsd:annotation>
                    <xsd:documentation>
                        Landline number should always be defined as string, including
                        country codes i.e. "442088702821"; and translated into
                        localised format on the presentation and backend layers.
                    </xsd:documentation>
                </xsd:annotation>
                <xsd:restriction base="xsd:string"/>
            </xsd:simpleType>

            <xsd:simpleType name="genderType">
                <xsd:annotation>
                    <xsd:documentation>Gender type</xsd:documentation>
                </xsd:annotation>
                <xsd:restriction base="xsd:string">
                    <xsd:enumeration value="M"/>
                    <xsd:enumeration value="F"/>
                    <xsd:enumeration value="U"/>
                </xsd:restriction>
            </xsd:simpleType>

            <xsd:simpleType name="identityUIDType">
                <xsd:annotation>
                    <xsd:documentation>
                        The A&amp;R Unique ID. The UID remains static accross userName changes.
                        It is deleted if the Identity becomes merged into another Identity.
                        (A broadcast message will inform systems of this change.)
                    </xsd:documentation>
                </xsd:annotation>
                <xsd:restriction base="xsd:string">
                    <xsd:pattern value="[0-9A-Za-z]*"/>
                    <xsd:maxLength value="40"/>
                </xsd:restriction>
            </xsd:simpleType>

            <xsd:simpleType name="identityUsernameType">
                <xsd:annotation>
                    <xsd:documentation>The full A&amp;R username (eg., user@domain or user@o2.co.uk)</xsd:documentation>
                </xsd:annotation>
                <xsd:restriction base="ocd:emailAddressType">
                    <xsd:maxLength value="320"/>
                </xsd:restriction>
            </xsd:simpleType>

            <xsd:element name="verify" type="ocd:verify">
                <xsd:annotation>
                    <xsd:documentation>simple check that token is valid</xsd:documentation>
                </xsd:annotation>
            </xsd:element>

            <xsd:complexType name="verify">
                <xsd:annotation>
                    <xsd:documentation>simple check that token is valid</xsd:documentation>
                </xsd:annotation>
                <xsd:sequence>
                    <xsd:element name="customerID" type="ocd:customerIDType"/>
                    <xsd:element name="portalID" type="ocd:portalIDType" minOccurs="0">
                        <xsd:annotation>
                            <xsd:documentation>The portal username</xsd:documentation>
                        </xsd:annotation>
                    </xsd:element>
                    <xsd:element name="authToken" type="xsd:string"/>
                </xsd:sequence>
            </xsd:complexType>

            <xsd:element name="verifyResponse" type="ocd:verifyResponse">
                <xsd:annotation>
                    <xsd:documentation>result of authToken check</xsd:documentation>
                </xsd:annotation>
            </xsd:element>

            <xsd:complexType name="verifyResponse">
                <xsd:annotation>
                    <xsd:documentation>result of authToken check</xsd:documentation>
                </xsd:annotation>
                <xsd:sequence>
                    <xsd:element name="result" type="ocd:StatusCodeType"/>
                    <xsd:element name="description" type="xsd:string" minOccurs="0"/>
                </xsd:sequence>
            </xsd:complexType>

            <xsd:element name="verifyFault" type="ocd:SOAFaultType">
                <xsd:annotation>
                    <xsd:documentation>Verify Authtoken Fault</xsd:documentation>
                </xsd:annotation>
            </xsd:element>

            <xsd:element name="getProfile" type="ocd:getProfile">
                <xsd:annotation>
                    <xsd:documentation>gets list of product IDs associated with Customer</xsd:documentation>
                </xsd:annotation>
            </xsd:element>

            <xsd:complexType name="getProfile">
                <xsd:annotation>
                    <xsd:documentation>gets list of product IDs associated with Customer</xsd:documentation>
                </xsd:annotation>
                <xsd:sequence>
                    <xsd:element name="customerID" type="ocd:customerIDType"/>
                    <xsd:element name="authToken" type="xsd:string"/>
                </xsd:sequence>
            </xsd:complexType>

            <xsd:element name="getProfileResponse" type="ocd:getProfileResponse">
                <xsd:annotation>
                    <xsd:documentation>
                        Returns identifiers that can be used to select further context
                    </xsd:documentation>
                </xsd:annotation>
            </xsd:element>

            <xsd:complexType name="getProfileResponse">
                <xsd:annotation>
                    <xsd:documentation>
                        Returns identifiers that can be used to select further context
                    </xsd:documentation>
                </xsd:annotation>
                <xsd:sequence>
                    <xsd:element name="onlineCustomer" type="ocd:onlineCustomer"/>
                </xsd:sequence>
            </xsd:complexType>

            <xsd:element name="getProfileFault" type="ocd:SOAFaultType">
                <xsd:annotation>
                    <xsd:documentation>getProfile Fault</xsd:documentation>
                </xsd:annotation>
            </xsd:element>

            <xsd:element name="getPersonalProfile" type="ocd:getPersonalProfile">
                <xsd:annotation>
                    <xsd:documentation>Gets all personal details for primary customer ID</xsd:documentation>
                </xsd:annotation>
            </xsd:element>

            <xsd:complexType name="getPersonalProfile">
                <xsd:annotation>
                    <xsd:documentation>Gets all personal details for primary customer ID</xsd:documentation>
                </xsd:annotation>
                <xsd:sequence>
                    <xsd:element name="customerID" type="ocd:customerIDType"/>
                    <xsd:element name="authToken" type="xsd:string"/>
                    <xsd:element name="productID" type="ocd:productIDType" minOccurs="0"/>
                </xsd:sequence>
            </xsd:complexType>

            <xsd:element name="getPersonalProfileResponse" type="ocd:getPersonalProfileResponse">
                <xsd:annotation>
                    <xsd:documentation>Returns main name, address, DoB, etc</xsd:documentation>
                </xsd:annotation>
            </xsd:element>

            <xsd:complexType name="getPersonalProfileResponse">
                <xsd:annotation>
                    <xsd:documentation>Returns main name, address, DoB, etc</xsd:documentation>
                </xsd:annotation>
                <xsd:sequence>
                    <xsd:element name="personalProfile" type="ocd:personalProfile"/>
                </xsd:sequence>
            </xsd:complexType>

            <xsd:element name="getPersonalProfileFault" type="ocd:SOAFaultType">
                <xsd:annotation>
                    <xsd:documentation>For a specific portal ID, return the profile</xsd:documentation>
                </xsd:annotation>
            </xsd:element>

            <xsd:element name="getPortalProfile" type="ocd:getPortalProfile">
                <xsd:annotation>
                    <xsd:documentation>For a specific portal ID, return the profile</xsd:documentation>
                </xsd:annotation>
            </xsd:element>

            <xsd:complexType name="getPortalProfile">
                <xsd:annotation>
                    <xsd:documentation>For a specific portal ID, return the profile</xsd:documentation>
                </xsd:annotation>
                <xsd:sequence>
                    <xsd:element name="customerID" type="ocd:customerIDType"/>
                    <xsd:element name="portalID" type="ocd:portalIDType" minOccurs="0"/>
                    <xsd:element name="authToken" type="xsd:string"/>
                </xsd:sequence>
            </xsd:complexType>

            <xsd:element name="getPortalProfileResponse" type="ocd:getPortalProfileResponse">
                <xsd:annotation>
                    <xsd:documentation>Returns name and list of products with alternative ID</xsd:documentation>
                </xsd:annotation>
            </xsd:element>

            <xsd:complexType name="getPortalProfileResponse">
                <xsd:annotation>
                    <xsd:documentation>Returns name and list of products with alternative ID</xsd:documentation>
                </xsd:annotation>
                <xsd:sequence>
                    <xsd:element name="portalProfile" type="ocd:portalProfile"/>
                </xsd:sequence>
            </xsd:complexType>

            <xsd:element name="getPortalProfileFault" type="ocd:SOAFaultType">
                <xsd:annotation>
                    <xsd:documentation>getPortalProfile Fault</xsd:documentation>
                </xsd:annotation>
            </xsd:element>

            <xsd:element name="getPortalSubscriberProfile" type="ocd:getPortalSubscriberProfile">
                <xsd:annotation>
                    <xsd:documentation>For a specific portal ID, get the profile and subcriber segment of registered
                        MSISDN in one call
                    </xsd:documentation>
                </xsd:annotation>
            </xsd:element>

            <xsd:complexType name="getPortalSubscriberProfile">
                <xsd:annotation>
                    <xsd:documentation>For a specific portal ID, get the profile and subcriber segment of registered
                        MSISDN in one call
                    </xsd:documentation>
                </xsd:annotation>
                <xsd:sequence>
                    <xsd:element name="customerID" type="ocd:customerIDType"/>
                    <xsd:element name="portalID" type="ocd:portalIDType" minOccurs="0"/>
                    <xsd:element name="authToken" type="xsd:string"/>
                </xsd:sequence>
            </xsd:complexType>

            <xsd:element name="getPortalSubscriberProfileResponse" type="ocd:getPortalSubscriberProfileResponse">
                <xsd:annotation>
                    <xsd:documentation>Returns profile and subscriber profile for single portal ID</xsd:documentation>
                </xsd:annotation>
            </xsd:element>

            <xsd:complexType name="getPortalSubscriberProfileResponse">
                <xsd:annotation>
                    <xsd:documentation>Returns profile and subscriber profile for single portal ID</xsd:documentation>
                </xsd:annotation>
                <xsd:sequence>
                    <xsd:element name="portalSubscriberProfile" type="ocd:portalSubscriberProfile"/>
                </xsd:sequence>
            </xsd:complexType>

            <xsd:element name="getPortalSubscriberProfileFault" type="ocd:SOAFaultType">
                <xsd:annotation>
                    <xsd:documentation>getPortalSubscriberProfile Fault</xsd:documentation>
                </xsd:annotation>
            </xsd:element>

            <xsd:element name="getSubscriberProfile" type="ocd:getSubscriberProfile">
                <xsd:annotation>
                    <xsd:documentation>For a mobile subscription, return the details</xsd:documentation>
                </xsd:annotation>
            </xsd:element>

            <xsd:complexType name="getSubscriberProfile">
                <xsd:annotation>
                    <xsd:documentation>For a mobile subscription, return the details</xsd:documentation>
                </xsd:annotation>
                <xsd:sequence>
                    <xsd:element name="customerID" type="ocd:customerIDType"/>
                    <xsd:element name="subscriberID" type="ocd:msisdnType" minOccurs="0"/>
                    <xsd:element name="authToken" type="xsd:string"/>
                </xsd:sequence>
            </xsd:complexType>

            <xsd:element name="getSubscriberProfileResponse" type="ocd:getSubscriberProfileResponse">
                <xsd:annotation>
                    <xsd:documentation>Returns details of the subscription</xsd:documentation>
                </xsd:annotation>
            </xsd:element>

            <xsd:complexType name="getSubscriberProfileResponse">
                <xsd:annotation>
                    <xsd:documentation>Returns details of the subscription</xsd:documentation>
                </xsd:annotation>
                <xsd:sequence>
                    <xsd:element name="subscriberProfile" type="ocd:SubscriberProfileType"/>
                </xsd:sequence>
            </xsd:complexType>

            <xsd:element name="getSubscriberProfileFault" type="ocd:SOAFaultType">
                <xsd:annotation>
                    <xsd:documentation>getSubscriberProfile Fault</xsd:documentation>
                </xsd:annotation>
            </xsd:element>

            <xsd:element name="getBillingProfile" type="ocd:getBillingProfile">
                <xsd:annotation>
                    <xsd:documentation>For a billing association get details</xsd:documentation>
                </xsd:annotation>
            </xsd:element>

            <xsd:complexType name="getBillingProfile">
                <xsd:annotation>
                    <xsd:documentation>For a billing association get details</xsd:documentation>
                </xsd:annotation>
                <xsd:sequence>
                    <xsd:element name="accountID" type="ocd:accountType"/>
                    <xsd:element name="authToken" type="xsd:string"/>
                </xsd:sequence>
            </xsd:complexType>

            <xsd:element name="getBillingProfileResponse" type="ocd:getBillingProfileResponse">
                <xsd:annotation>
                    <xsd:documentation>Returns basic profile of tariff, etc.for the user</xsd:documentation>
                </xsd:annotation>
            </xsd:element>

            <xsd:complexType name="getBillingProfileResponse">
                <xsd:annotation>
                    <xsd:documentation>Returns basic profile of tariff, etc.for the user</xsd:documentation>
                </xsd:annotation>
                <xsd:sequence>
                    <xsd:element name="accountNumber" type="ocd:billingAccountNumberType" minOccurs="0"
                                 maxOccurs="unbounded"/>
                </xsd:sequence>
            </xsd:complexType>

            <xsd:element name="getBillingProfileFault" type="ocd:SOAFaultType">
                <xsd:annotation>
                    <xsd:documentation>getBillingProfile Fault</xsd:documentation>
                </xsd:annotation>
            </xsd:element>

            <xsd:element name="getFullProfile" type="ocd:getFullProfile">
                <xsd:annotation>
                    <xsd:documentation>One call that can be used to lazy-load all data</xsd:documentation>
                </xsd:annotation>
            </xsd:element>

            <xsd:complexType name="getFullProfile">
                <xsd:annotation>
                    <xsd:documentation>One call that can be used to lazy-load all data</xsd:documentation>
                </xsd:annotation>
                <xsd:sequence>
                    <xsd:element name="customerID" type="ocd:customerIDType"/>
                    <xsd:element name="authToken" type="xsd:string"/>
                </xsd:sequence>
            </xsd:complexType>

            <xsd:element name="getFullProfileResponse" type="ocd:getFullProfileResponse">
                <xsd:annotation>
                    <xsd:documentation>Returns all customer details in one call (large structure)</xsd:documentation>
                </xsd:annotation>
            </xsd:element>

            <xsd:complexType name="getFullProfileResponse">
                <xsd:annotation>
                    <xsd:documentation>Returns all customer details in one call (large structure)</xsd:documentation>
                </xsd:annotation>
                <xsd:sequence>
                    <xsd:element name="onlineCustomerDetails" type="ocd:onlineCustomerDetails"/>
                </xsd:sequence>
            </xsd:complexType>

            <xsd:element name="getFullProfileFault" type="ocd:SOAFaultType">
                <xsd:annotation>
                    <xsd:documentation>getFullProfile Fault</xsd:documentation>
                </xsd:annotation>
            </xsd:element>

            <xsd:element name="getDefaultProfile" type="ocd:getDefaultProfile">
                <xsd:annotation>
                    <xsd:documentation>Gets the PortalSubscriberProfile of the default Registered MSISDN
                    </xsd:documentation>
                </xsd:annotation>
            </xsd:element>

            <xsd:complexType name="getDefaultProfile">
                <xsd:annotation>
                    <xsd:documentation>Gets the PortalSubscriberProfile of the default Registered MSISDN
                    </xsd:documentation>
                </xsd:annotation>
                <xsd:sequence>
                    <xsd:element name="customerID" type="ocd:customerIDType"/>
                    <xsd:element name="authToken" type="xsd:string"/>
                </xsd:sequence>
            </xsd:complexType>

            <xsd:element name="getDefaultProfileResponse" type="ocd:getDefaultProfileResponse">
                <xsd:annotation>
                    <xsd:documentation>Returns the portal details and segmentation for the registered MSISDN only
                    </xsd:documentation>
                </xsd:annotation>
            </xsd:element>

            <xsd:complexType name="getDefaultProfileResponse">
                <xsd:annotation>
                    <xsd:documentation>Returns the portal details and segmentation for the registered MSISDN only
                    </xsd:documentation>
                </xsd:annotation>
                <xsd:sequence>
                    <xsd:element name="portalSubscriberProfile" type="ocd:portalSubscriberProfile"/>
                </xsd:sequence>
            </xsd:complexType>

            <xsd:element name="getDefaultProfileFault" type="ocd:SOAFaultType">
                <xsd:annotation>
                    <xsd:documentation>getDefaultProfile Fault</xsd:documentation>
                </xsd:annotation>
            </xsd:element>

            <xsd:element name="login" type="ocd:login">
                <xsd:annotation>
                    <xsd:documentation>The Login request</xsd:documentation>
                </xsd:annotation>
            </xsd:element>

            <xsd:complexType name="login">
                <xsd:annotation>
                    <xsd:documentation>The Login request</xsd:documentation>
                </xsd:annotation>
                <xsd:sequence>
                    <xsd:element name="username" type="ocd:portalIDType"/>
                    <xsd:element name="password" type="xsd:string"/>
                    <xsd:element name="profile" type="xsd:boolean" minOccurs="0"/>
                </xsd:sequence>
            </xsd:complexType>

            <xsd:element name="loginResponse" type="ocd:loginResponse">
                <xsd:annotation>
                    <xsd:documentation>result of the login check</xsd:documentation>
                </xsd:annotation>
            </xsd:element>

            <xsd:complexType name="loginResponse">
                <xsd:annotation>
                    <xsd:documentation>result of the login check</xsd:documentation>
                </xsd:annotation>
                <xsd:sequence>
                    <xsd:element name="result" type="ocd:StatusCodeType"/>
                    <xsd:element name="description" type="xsd:string" minOccurs="0"/>
                    <xsd:element name="customerID" type="ocd:customerIDType" minOccurs="0"/>
                    <xsd:element name="authToken" type="xsd:string" minOccurs="0"/>
                    <xsd:element name="onlineCustomer" type="ocd:onlineCustomer" minOccurs="0"/>
                </xsd:sequence>
            </xsd:complexType>

            <xsd:element name="loginFault" type="ocd:SOAFaultType">
                <xsd:annotation>
                    <xsd:documentation>login Fault</xsd:documentation>
                </xsd:annotation>
            </xsd:element>

            <xsd:element name="logout" type="ocd:logout">
                <xsd:annotation>
                    <xsd:documentation>Request to log a customer out</xsd:documentation>
                </xsd:annotation>
            </xsd:element>

            <xsd:complexType name="logout">
                <xsd:annotation>
                    <xsd:documentation>Request to log a customer out</xsd:documentation>
                </xsd:annotation>
                <xsd:sequence>
                    <xsd:element name="username" type="ocd:portalIDType"/>
                    <xsd:element name="authToken" type="xsd:string"/>
                </xsd:sequence>
            </xsd:complexType>

            <xsd:element name="logoutResponse" type="ocd:logoutResponse">
                <xsd:annotation>
                    <xsd:documentation>The response back when you log out</xsd:documentation>
                </xsd:annotation>
            </xsd:element>

            <xsd:complexType name="logoutResponse">
                <xsd:annotation>
                    <xsd:documentation>The response back when you log out</xsd:documentation>
                </xsd:annotation>
                <xsd:sequence>
                    <xsd:element name="result" type="ocd:StatusCodeType"/>
                    <xsd:element name="description" type="xsd:string" minOccurs="0"/>
                </xsd:sequence>
            </xsd:complexType>

            <xsd:element name="logoutFault" type="ocd:SOAFaultType">
                <xsd:annotation>
                    <xsd:documentation>logout Fault</xsd:documentation>
                </xsd:annotation>
            </xsd:element>

            <xsd:complexType name="onlineCustomer">
                <xsd:annotation>
                    <xsd:documentation>The complex type that defines the online customer</xsd:documentation>
                </xsd:annotation>
                <xsd:sequence>
                    <xsd:element name="customerID" type="ocd:customerIDType"/>
                    <xsd:element name="customerRole" type="xsd:string" minOccurs="0" maxOccurs="unbounded">
                        <xsd:annotation>
                            <xsd:documentation>
                                This is the old User, Chooser, thing from the registration system. Not sure this really
                                belongs at the top level
                            </xsd:documentation>
                        </xsd:annotation>
                    </xsd:element>
                    <xsd:element name="portalID" type="ocd:portalIDType" maxOccurs="unbounded"/>
                    <xsd:element name="SubscriberID" type="ocd:msisdnType" minOccurs="0" maxOccurs="unbounded"/>
                    <xsd:element name="productID" type="ocd:productIDType" minOccurs="0" maxOccurs="unbounded"/>
                </xsd:sequence>
            </xsd:complexType>

            <xsd:complexType name="onlineCustomerDetails">
                <xsd:annotation>
                    <xsd:documentation>This profile is the FULL profile with all known data.</xsd:documentation>
                </xsd:annotation>
                <xsd:sequence>
                    <xsd:element name="customerID" type="ocd:customerIDType"/>
                    <xsd:element name="customerRole" type="xsd:string" minOccurs="0" maxOccurs="unbounded">
                        <xsd:annotation>
                            <xsd:documentation>This is the old User, Chooser, thing from Orange</xsd:documentation>
                        </xsd:annotation>
                    </xsd:element>
                    <xsd:element name="personalProfile" type="ocd:personalProfile"/>
                    <xsd:element name="portalProfile" type="ocd:portalProfile" maxOccurs="unbounded"/>
                    <xsd:element name="subscriberProfile" type="ocd:SubscriberProfileType" minOccurs="0"
                                 maxOccurs="unbounded"/>
                    <xsd:element name="productID" type="ocd:productIDType" minOccurs="0" maxOccurs="unbounded">
                        <xsd:annotation>
                            <xsd:documentation>
                                Each customer login can potentially have lots of different available
                                products to manage. Defined so far are just the products associated with a
                                specific portal ID and a phone number. In most cases these will be one-to-one
                            </xsd:documentation>
                        </xsd:annotation>
                    </xsd:element>
                </xsd:sequence>
            </xsd:complexType>

            <xsd:complexType name="portalProfile">
                <xsd:annotation>
                    <xsd:documentation>The portal profile type definitions</xsd:documentation>
                </xsd:annotation>
                <xsd:sequence>
                    <xsd:element name="customerID" type="ocd:customerIDType">
                        <xsd:annotation>
                            <xsd:documentation>
                                The ID that uniquely identifies the customer in the portal and is placed in the ID
                                cookies.
                            </xsd:documentation>
                        </xsd:annotation>
                    </xsd:element>
                    <xsd:element name="portalID" type="ocd:portalIDType">
                        <xsd:annotation>
                            <xsd:documentation>Input parameter is the login name on the portal, often in the format
                                firstname.lastname
                            </xsd:documentation>
                        </xsd:annotation>
                    </xsd:element>
                    <xsd:element name="status" type="ocd:status"/>
                    <xsd:element name="firstName" type="xsd:string">
                        <xsd:annotation>
                            <xsd:documentation>First name or could be the label assigned to the portal
                            </xsd:documentation>
                        </xsd:annotation>
                    </xsd:element>
                    <xsd:element name="lastName" type="xsd:string">
                        <xsd:annotation>
                            <xsd:documentation>Last name of the person as recorded in the portal profile.
                            </xsd:documentation>
                        </xsd:annotation>
                    </xsd:element>
                    <xsd:element name="subscriberID" type="ocd:msisdnType" minOccurs="0">
                        <xsd:annotation>
                            <xsd:documentation>The main mobile phone number registered to, and verified against, the ID.
                            </xsd:documentation>
                        </xsd:annotation>
                    </xsd:element>
                    <xsd:element name="validatedDate" type="xsd:dateTime" minOccurs="0"/>
                    <xsd:element name="label" type="xsd:string" nillable="true" minOccurs="0"/>
                    <xsd:element name="portalProduct" type="xsd:string" nillable="true" minOccurs="0"
                                 maxOccurs="unbounded"/>
                </xsd:sequence>
            </xsd:complexType>

            <xsd:complexType name="portalSubscriberProfile">
                <xsd:annotation>
                    <xsd:documentation>The portal profile type definitions</xsd:documentation>
                </xsd:annotation>
                <xsd:sequence>
                    <xsd:element name="customerID" type="ocd:customerIDType">
                        <xsd:annotation>
                            <xsd:documentation>The ID that uniquely identifies the customer in the portal and is placed
                                in the ID cookies.
                            </xsd:documentation>
                        </xsd:annotation>
                    </xsd:element>
                    <xsd:element name="portalID" type="ocd:portalIDType">
                        <xsd:annotation>
                            <xsd:documentation>Input parameter is the login name on the portal, often in the format
                                firstname.lastname
                            </xsd:documentation>
                        </xsd:annotation>
                    </xsd:element>
                    <xsd:element name="status" type="ocd:status">
                        <xsd:annotation>
                            <xsd:documentation>The portal status, A = active, etc.</xsd:documentation>
                        </xsd:annotation>
                    </xsd:element>
                    <xsd:element name="firstName" type="xsd:string">
                        <xsd:annotation>
                            <xsd:documentation>First name or could be the label assigned to the portal
                            </xsd:documentation>
                        </xsd:annotation>
                    </xsd:element>
                    <xsd:element name="lastName" type="xsd:string">
                        <xsd:annotation>
                            <xsd:documentation>Last name of the person as recorded in the portal profile.
                            </xsd:documentation>
                        </xsd:annotation>
                    </xsd:element>
                    <xsd:element name="subscriber" type="ocd:SubscriberProfileType" minOccurs="0">
                        <xsd:annotation>
                            <xsd:documentation>The main mobile phone number registered to, and verified against, the ID.
                            </xsd:documentation>
                        </xsd:annotation>
                    </xsd:element>
                    <xsd:element name="validatedDate" type="xsd:dateTime" minOccurs="0"/>
                    <xsd:element name="label" type="xsd:string" minOccurs="0"/>
                    <xsd:element name="portalProduct" type="xsd:string" minOccurs="0" maxOccurs="unbounded"/>
                </xsd:sequence>
            </xsd:complexType>

            <xsd:complexType name="personalProfile">
                <xsd:annotation>
                    <xsd:documentation>The type of the personal profile structure</xsd:documentation>
                </xsd:annotation>
                <xsd:sequence>
                    <xsd:element name="customerID" type="ocd:customerIDType">
                        <xsd:annotation>
                            <xsd:documentation>The key to the personal data for the customer. Initially the 15 digit
                                o2BFid
                            </xsd:documentation>
                        </xsd:annotation>
                    </xsd:element>
                    <xsd:element name="firstName" type="xsd:string"/>
                    <xsd:element name="middleName" type="xsd:string" minOccurs="0"/>
                    <xsd:element name="lastName" type="xsd:string"/>
                    <xsd:element name="gender" type="ocd:gender"/>
                    <xsd:element name="address" type="ocd:address"/>
                    <xsd:element name="dateOfBirth" type="xsd:date"/>
                    <xsd:element name="title" type="xsd:string" minOccurs="0">
                        <xsd:annotation>
                            <xsd:documentation>
                                Could use a standard enumeration here rather than free text
                            </xsd:documentation>
                        </xsd:annotation>
                    </xsd:element>
                    <xsd:element name="O2EmailAddress" type="xsd:string"/>
                    <xsd:element name="alternateEmailAddress" type="xsd:string" minOccurs="0"/>
                    <xsd:element name="contactPhone" type="xsd:string" minOccurs="0"/>
                    <xsd:element name="contactMobile" type="ocd:msisdnType" minOccurs="0"/>
                </xsd:sequence>
            </xsd:complexType>

            <xsd:simpleType name="status">
                <xsd:annotation>
                    <xsd:documentation>The portal status, A = active, etc.</xsd:documentation>
                </xsd:annotation>
                <xsd:restriction base="xsd:string">
                    <xsd:enumeration value="Active"/>
                    <xsd:enumeration value="Enabled"/>
                    <xsd:enumeration value="Disabled"/>
                    <xsd:enumeration value="Unknown"/>
                </xsd:restriction>
            </xsd:simpleType>

            <xsd:simpleType name="gender">
                <xsd:annotation>
                    <xsd:documentation>Gender</xsd:documentation>
                </xsd:annotation>
                <xsd:restriction base="xsd:string">
                    <xsd:enumeration value="male"/>
                    <xsd:enumeration value="female"/>
                    <xsd:enumeration value="unknown"/>
                </xsd:restriction>
            </xsd:simpleType>

            <xsd:complexType name="address">
                <xsd:annotation>
                    <xsd:documentation>Standard-ish address structure</xsd:documentation>
                </xsd:annotation>
                <xsd:sequence>
                    <xsd:element name="postalCode" type="xsd:string" minOccurs="0"/>
                    <xsd:element name="addressLineOne" type="xsd:string"/>
                    <xsd:element name="addressLineTwo" type="xsd:string" minOccurs="0"/>
                    <xsd:element name="houseNumber" type="xsd:string" minOccurs="0"/>
                    <xsd:element name="houseName" type="xsd:string" minOccurs="0"/>
                    <xsd:element name="townOrCity" type="xsd:string"/>
                    <xsd:element name="countyOrState" type="xsd:string" minOccurs="0"/>
                    <xsd:element name="country" type="xsd:string">
                        <xsd:annotation>
                            <xsd:documentation>Could use a standard enumeration here rather than free text
                            </xsd:documentation>
                        </xsd:annotation>
                    </xsd:element>
                </xsd:sequence>
            </xsd:complexType>
        </xsd:schema>


    </wsdl:types>

    <wsdl:message name="getProfile">
        <wsdl:part name="getProfile" element="ocd:getProfile"/>
    </wsdl:message>
    <wsdl:message name="getProfileResponse">
        <wsdl:part name="getProfileResponse" element="ocd:getProfileResponse"/>
    </wsdl:message>
    <wsdl:message name="getProfileFault">
        <wsdl:part name="getProfileFault" element="ocd:getProfileFault"/>
    </wsdl:message>
    <wsdl:message name="verify">
        <wsdl:part name="verify" element="ocd:verify"/>
    </wsdl:message>
    <wsdl:message name="verifyResponse">
        <wsdl:part name="verifyResponse" element="ocd:verifyResponse"/>
    </wsdl:message>
    <wsdl:message name="verifyFault">
        <wsdl:part name="verifyFault" element="ocd:verifyFault"/>
    </wsdl:message>
    <wsdl:message name="getPortalProfile">
        <wsdl:part name="getPortalProfile" element="ocd:getPortalProfile"/>
    </wsdl:message>
    <wsdl:message name="getPortalProfileResponse">
        <wsdl:part name="getPortalProfileResponse" element="ocd:getPortalProfileResponse"/>
    </wsdl:message>
    <wsdl:message name="getPortalProfileFault">
        <wsdl:part name="getPortalProfileFault" element="ocd:getPortalProfileFault"/>
    </wsdl:message>
    <wsdl:message name="getSubscriberProfile">
        <wsdl:part name="getSubscriberProfile" element="ocd:getSubscriberProfile"/>
    </wsdl:message>
    <wsdl:message name="getSubscriberProfileResponse">
        <wsdl:part name="getSubscriberProfileResponse" element="ocd:getSubscriberProfileResponse"/>
    </wsdl:message>
    <wsdl:message name="getSubscriberProfileFault">
        <wsdl:part name="getSubscriberProfileFault" element="ocd:getSubscriberProfileFault"/>
    </wsdl:message>
    <wsdl:message name="getPersonalProfile">
        <wsdl:part name="getPersonalProfile" element="ocd:getPersonalProfile"/>
    </wsdl:message>
    <wsdl:message name="getPersonalProfileResponse">
        <wsdl:part name="getPersonalProfileResponse" element="ocd:getPersonalProfileResponse"/>
    </wsdl:message>
    <wsdl:message name="getPersonalProfileFault">
        <wsdl:part name="getPersonalProfileFault" element="ocd:getPersonalProfileFault"/>
    </wsdl:message>
    <wsdl:message name="getFullProfile">
        <wsdl:part name="getFullProfile" element="ocd:getFullProfile"/>
    </wsdl:message>
    <wsdl:message name="getFullProfileResponse">
        <wsdl:part name="getFullProfileResponse" element="ocd:getFullProfileResponse"/>
    </wsdl:message>
    <wsdl:message name="getFullProfileFault">
        <wsdl:part name="getFullProfileFault" element="ocd:getFullProfileFault"/>
    </wsdl:message>
    <wsdl:message name="login">
        <wsdl:part name="login" element="ocd:login"/>
    </wsdl:message>
    <wsdl:message name="loginResponse">
        <wsdl:part name="loginResponse" element="ocd:loginResponse"/>
    </wsdl:message>
    <wsdl:message name="loginFault">
        <wsdl:part name="loginFault" element="ocd:loginFault"/>
    </wsdl:message>
    <wsdl:message name="logout">
        <wsdl:part name="logout" element="ocd:logout"/>
    </wsdl:message>
    <wsdl:message name="logoutResponse">
        <wsdl:part name="logoutResponse" element="ocd:logoutResponse"/>
    </wsdl:message>
    <wsdl:message name="logoutFault">
        <wsdl:part name="logoutFault" element="ocd:logoutFault"/>
    </wsdl:message>
    <wsdl:message name="getPortalSubscriberProfile">
        <wsdl:part name="getPortalSubscriberProfile" element="ocd:getPortalSubscriberProfile"/>
    </wsdl:message>
    <wsdl:message name="getPortalSubscriberProfileResponse">
        <wsdl:part name="getPortalSubscriberProfileResponse" element="ocd:getPortalSubscriberProfileResponse"/>
    </wsdl:message>
    <wsdl:message name="getPortalSubscriberProfileFault">
        <wsdl:part name="getPortalSubscriberProfileFault" element="ocd:getPortalSubscriberProfileFault"/>
    </wsdl:message>
    <wsdl:message name="getDefaultProfile">
        <wsdl:part name="getDefaultProfile" element="ocd:getDefaultProfile"/>
    </wsdl:message>
    <wsdl:message name="getDefaultProfileResponse">
        <wsdl:part name="getDefaultProfileResponse" element="ocd:getDefaultProfileResponse"/>
    </wsdl:message>
    <wsdl:message name="getDefaultProfileFault">
        <wsdl:part name="getDefaultProfileFault" element="ocd:getDefaultProfileFault"/>
    </wsdl:message>
    <wsdl:message name="getBillingProfile">
        <wsdl:part name="getBillingProfile" element="ocd:getBillingProfile"/>
    </wsdl:message>
    <wsdl:message name="getBillingProfileResponse">
        <wsdl:part name="getBillingProfileResponse" element="ocd:getBillingProfileResponse"/>
    </wsdl:message>
    <wsdl:message name="getBillingProfileFault">
        <wsdl:part name="getBillingProfileFault" element="ocd:getBillingProfileFault"/>
    </wsdl:message>
    <wsdl:portType name="OnlineCustomerPort">
        <wsdl:operation name="getProfile">
            <wsdl:input name="getProfile" message="ocs:getProfile"/>
            <wsdl:output name="getProfileResponse" message="ocs:getProfileResponse"/>
            <wsdl:fault name="getProfileFault" message="ocs:getProfileFault"/>
        </wsdl:operation>
        <wsdl:operation name="verify">
            <wsdl:input name="verify" message="ocs:verify"/>
            <wsdl:output name="verifyResponse" message="ocs:verifyResponse"/>
            <wsdl:fault name="verifyFault" message="ocs:verifyFault"/>
        </wsdl:operation>
        <wsdl:operation name="getPortalProfile">
            <wsdl:input name="getPortalProfile" message="ocs:getPortalProfile"/>
            <wsdl:output name="getPortalProfileResponse" message="ocs:getPortalProfileResponse"/>
            <wsdl:fault name="getPortalProfileFault" message="ocs:getPortalProfileFault"/>
        </wsdl:operation>
        <wsdl:operation name="getSubscriberProfile">
            <wsdl:input name="getSubscriberProfile" message="ocs:getSubscriberProfile"/>
            <wsdl:output name="getSubscriberProfileResponse" message="ocs:getSubscriberProfileResponse"/>
            <wsdl:fault name="getSubscriberProfileFault" message="ocs:getSubscriberProfileFault"/>
        </wsdl:operation>
        <wsdl:operation name="getPersonalProfile">
            <wsdl:input name="getPersonalProfile" message="ocs:getPersonalProfile"/>
            <wsdl:output name="getPersonalProfileResponse" message="ocs:getPersonalProfileResponse"/>
            <wsdl:fault name="getPersonalProfileFault" message="ocs:getPersonalProfileFault"/>
        </wsdl:operation>
        <wsdl:operation name="getFullProfile">
            <wsdl:input name="getFullProfile" message="ocs:getFullProfile"/>
            <wsdl:output name="getFullProfileResponse" message="ocs:getFullProfileResponse"/>
            <wsdl:fault name="getFullProfileFault" message="ocs:getFullProfileFault"/>
        </wsdl:operation>
        <wsdl:operation name="login">
            <wsdl:input name="login" message="ocs:login"/>
            <wsdl:output name="loginResponse" message="ocs:loginResponse"/>
            <wsdl:fault name="loginFault" message="ocs:loginFault"/>
        </wsdl:operation>
        <wsdl:operation name="logout">
            <wsdl:input name="logout" message="ocs:logout"/>
            <wsdl:output name="logoutResponse" message="ocs:logoutResponse"/>
            <wsdl:fault name="logoutFault" message="ocs:logoutFault"/>
        </wsdl:operation>
        <wsdl:operation name="getPortalSubscriberProfile">
            <wsdl:input name="getPortalSubscriberProfile" message="ocs:getPortalSubscriberProfile"/>
            <wsdl:output name="getPortalSubscriberProfileResponse" message="ocs:getPortalSubscriberProfileResponse"/>
            <wsdl:fault name="getPortalSubscriberProfileFault" message="ocs:getPortalSubscriberProfileFault"/>
        </wsdl:operation>
        <wsdl:operation name="getDefaultProfile">
            <wsdl:input name="getDefaultProfile" message="ocs:getDefaultProfile"/>
            <wsdl:output name="getDefaultProfileResponse" message="ocs:getDefaultProfileResponse"/>
            <wsdl:fault name="getDefaultProfileFault" message="ocs:getDefaultProfileFault"/>
        </wsdl:operation>
        <wsdl:operation name="getBillingProfile">
            <wsdl:input name="getBillingProfile" message="ocs:getBillingProfile"/>
            <wsdl:output name="getBillingProfileResponse" message="ocs:getBillingProfileResponse"/>
            <wsdl:fault name="getBillingProfileFault" message="ocs:getBillingProfileFault"/>
        </wsdl:operation>
    </wsdl:portType>
    <wsdl:binding name="OnlineCustomerBinding" type="ocs:OnlineCustomerPort">
        <soap:binding style="document" transport="http://schemas.xmlsoap.org/soap/http"/>
        <wsdl:operation name="getProfile">
            <soap:operation soapAction=""/>
            <wsdl:input name="getProfile">
                <soap:body parts="getProfile" use="literal"/>
            </wsdl:input>
            <wsdl:output name="getProfileResponse">
                <soap:body parts="getProfileResponse" use="literal"/>
            </wsdl:output>
            <wsdl:fault name="getProfileFault">
                <soap:fault name="getProfileFault" use="literal"/>
            </wsdl:fault>
        </wsdl:operation>
        <wsdl:operation name="verify">
            <soap:operation soapAction=""/>
            <wsdl:input name="verify">
                <soap:body parts="verify" use="literal"/>
            </wsdl:input>
            <wsdl:output name="verifyResponse">
                <soap:body parts="verifyResponse" use="literal"/>
            </wsdl:output>
            <wsdl:fault name="verifyFault">
                <soap:fault name="verifyFault" use="literal"/>
            </wsdl:fault>
        </wsdl:operation>
        <wsdl:operation name="getPortalProfile">
            <soap:operation soapAction=""/>
            <wsdl:input name="getPortalProfile">
                <soap:body parts="getPortalProfile" use="literal"/>
            </wsdl:input>
            <wsdl:output name="getPortalProfileResponse">
                <soap:body parts="getPortalProfileResponse" use="literal"/>
            </wsdl:output>
            <wsdl:fault name="getPortalProfileFault">
                <soap:fault name="getPortalProfileFault" use="literal"/>
            </wsdl:fault>
        </wsdl:operation>
        <wsdl:operation name="getSubscriberProfile">
            <soap:operation soapAction=""/>
            <wsdl:input name="getSubscriberProfile">
                <soap:body parts="getSubscriberProfile" use="literal"/>
            </wsdl:input>
            <wsdl:output name="getSubscriberProfileResponse">
                <soap:body parts="getSubscriberProfileResponse" use="literal"/>
            </wsdl:output>
            <wsdl:fault name="getSubscriberProfileFault">
                <soap:fault name="getSubscriberProfileFault" use="literal"/>
            </wsdl:fault>
        </wsdl:operation>
        <wsdl:operation name="getPersonalProfile">
            <soap:operation soapAction=""/>
            <wsdl:input name="getPersonalProfile">
                <soap:body parts="getPersonalProfile" use="literal"/>
            </wsdl:input>
            <wsdl:output name="getPersonalProfileResponse">
                <soap:body parts="getPersonalProfileResponse" use="literal"/>
            </wsdl:output>
            <wsdl:fault name="getPersonalProfileFault">
                <soap:fault name="getPersonalProfileFault" use="literal"/>
            </wsdl:fault>
        </wsdl:operation>
        <wsdl:operation name="getFullProfile">
            <soap:operation soapAction=""/>
            <wsdl:input name="getFullProfile">
                <soap:body parts="getFullProfile" use="literal"/>
            </wsdl:input>
            <wsdl:output name="getFullProfileResponse">
                <soap:body parts="getFullProfileResponse" use="literal"/>
            </wsdl:output>
            <wsdl:fault name="getFullProfileFault">
                <soap:fault name="getFullProfileFault" use="literal"/>
            </wsdl:fault>
        </wsdl:operation>
        <wsdl:operation name="login">
            <soap:operation soapAction=""/>
            <wsdl:input name="login">
                <soap:body parts="login" use="literal"/>
            </wsdl:input>
            <wsdl:output name="loginResponse">
                <soap:body parts="loginResponse" use="literal"/>
            </wsdl:output>
            <wsdl:fault name="loginFault">
                <soap:fault name="loginFault" use="literal"/>
            </wsdl:fault>
        </wsdl:operation>
        <wsdl:operation name="logout">
            <soap:operation soapAction=""/>
            <wsdl:input name="logout">
                <soap:body parts="logout" use="literal"/>
            </wsdl:input>
            <wsdl:output name="logoutResponse">
                <soap:body parts="logoutResponse" use="literal"/>
            </wsdl:output>
            <wsdl:fault name="logoutFault">
                <soap:fault name="logoutFault" use="literal"/>
            </wsdl:fault>
        </wsdl:operation>
        <wsdl:operation name="getPortalSubscriberProfile">
            <soap:operation soapAction=""/>
            <wsdl:input name="getPortalSubscriberProfile">
                <soap:body parts="getPortalSubscriberProfile" use="literal"/>
            </wsdl:input>
            <wsdl:output name="getPortalSubscriberProfileResponse">
                <soap:body parts="getPortalSubscriberProfileResponse" use="literal"/>
            </wsdl:output>
            <wsdl:fault name="getPortalSubscriberProfileFault">
                <soap:fault name="getPortalSubscriberProfileFault" use="literal"/>
            </wsdl:fault>
        </wsdl:operation>
        <wsdl:operation name="getDefaultProfile">
            <soap:operation soapAction=""/>
            <wsdl:input name="getDefaultProfile">
                <soap:body parts="getDefaultProfile" use="literal"/>
            </wsdl:input>
            <wsdl:output name="getDefaultProfileResponse">
                <soap:body parts="getDefaultProfileResponse" use="literal"/>
            </wsdl:output>
            <wsdl:fault name="getDefaultProfileFault">
                <soap:fault name="getDefaultProfileFault" use="literal"/>
            </wsdl:fault>
        </wsdl:operation>
        <wsdl:operation name="getBillingProfile">
            <soap:operation soapAction=""/>
            <wsdl:input name="getBillingProfile">
                <soap:body parts="getBillingProfile" use="literal"/>
            </wsdl:input>
            <wsdl:output name="getBillingProfileResponse">
                <soap:body parts="getBillingProfileResponse" use="literal"/>
            </wsdl:output>
            <wsdl:fault name="getBillingProfileFault">
                <soap:fault name="getBillingProfileFault" use="literal"/>
            </wsdl:fault>
        </wsdl:operation>
    </wsdl:binding>
    <wsdl:service name="OnlineCustomerService">
        <wsdl:port name="OnlineCustomerPort" binding="ocs:OnlineCustomerBinding">
            <soap:address location="https://sdpapi.o2.co.uk/services/OnlineCustomer_1_1"/>
        </wsdl:port>
    </wsdl:service>
</wsdl:definitions>